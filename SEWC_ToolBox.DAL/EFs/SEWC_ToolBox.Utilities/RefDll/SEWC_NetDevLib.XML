<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SEWC_NetDevLib</name>
    </assembly>
    <members>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibBasic.DataCache">
            <summary>
            缓存相关的操作类
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.DataCache.GetCache(System.String)">
            <summary>
            获取当前应用程序指定CacheKey的Cache值
            </summary>
            <param name="CacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.DataCache.SetCache(System.String,System.Object)">
            <summary>
            设置当前应用程序指定CacheKey的Cache值
            </summary>
            <param name="CacheKey"></param>
            <param name="objObject"></param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.DataCache.SetCache(System.String,System.Object,System.DateTime,System.TimeSpan)">
            <summary>
            设置当前应用程序指定CacheKey的Cache值
            </summary>
            <param name="CacheKey"></param>
            <param name="objObject"></param>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation">
            <summary>
            Descript:   This class is used to connect to SQL SERVER/OLDDB database and SQL excution. It need to define connectionString first,and system with idenfy the conectiong type
            base the string or u can define conectiong type manually, then call the publih
            method. suggest that declare instance into static and sharing in the application leave
            Required:   Net FW4 .0 or abovt Useing in : WinForm / WebForm
            Updated:    2016.06.24 Guantujiang
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.GlobalConnection">
            <summary>
            if using global connection in this class, default to true. then will share the one Connection  in static object
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MySqlConn">
            <summary>
            My SQL connection
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MyOleConn">
            <summary>
            My OLE connection
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MyOraConn">
            <summary>
            My ora connection
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MyOdbConn">
            <summary>
            My odb connection
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation._connectionType">
            <summary>
            The _connection type
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation._connectionStrings">
            <summary>
            the connectionStrings
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation"/> class.
            初始化<see cref="T:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation"/>，使用此类时应声明连接字符串与连接类型。
            </summary>
            <example>
              <code>
            SQLOperation s = new SQLOperation();
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation"/> class.
            带连接字符串初始化<see cref="T:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation"/>
            </summary>
            <param name="connectionStrings">The connection strings，
            can use the name in web.config.
            system will detect the connection Type base keyword, or you can define manually
            <para> 在声明连接字符串的同时，系统会根据连接字符串中是否以“Provider”开头（系统将忽略大小写与前置空格）并且其中包含“OLEDB”来判断其连接类型，
            若符合则为OLEDB数据连接类型，若不是OLEDB连接并且字符串以”DSN”字符串开头，则为ODBC连接，否则若包含“CATALOG”字符串则为SQL SERVER类型，
            如以上条件均不符合，则为ORACLE数据连接类型。此时无需额外声明连接类型。此实现方法为不安全声明方法，建议显示声明连接类型，
            并注意声明连接类型应该位于声明连接字符串之后，以避免被连接字符串初始化时的默认方法覆盖。</para></param>
            <example>
            1. 实例化一个类，并且声明用来连接SQL 数据库
            <code>
            SQLOperation s = new SQLOperation("Data Source=serverPath ;Initial Catalog=catalog;Persist Security Info=True;User ID=userName;Password=password");
            </code>
            2. 实例化一个类，调用web.config中链接字符串来连接SQL 数据库
            <para>
            web.config:
            <code><connectionStrings><add name="SqlServerDB" connectionString="Data Source=serverPath ;Initial Catalog=catalog;Persist Security Info=True;User ID=userName;Password=password"/></connectionStrings></code></para><para>
            code:
            <code>
            SQLOperation s = new SQLOperation("SqlServerDB");
            </code></para></example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.#ctor(System.String,SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.EDMySQLOperationType)">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation"/> class.
            带连接字符串初始化<see cref="T:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation"/>, 并指定其链接类型
            </summary>
            <param name="connectionStrings">The connection strings.连接字符串</param>
            <param name="connectionType">Type of the connection.链接类型，支持SQL SERVER / Oracle / OLEDB / ODBC</param>
            <example>
            实例化一个类，并且声明连接字符串，并显式指定数据库链接类型
            <code>
            SQLOperation s = new SQLOperation("Data Source=serverPath ;Initial Catalog=catalog;Persist Security Info=True;User ID=userName;Password=password", EDMySQLOperationType.SQLSERVER);
            </code></example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation"/> class.
            带连接字符串初始化<see cref="T:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation"/>, 并用整数指定其链接类型
            </summary>
            <param name="connectionStrings">The connectionStrings parameter</param>
            <param name="connectionType">The connectionType parameter</param>
            <example>
            实例化一个类，并且声明连接字符串，并显式指定数据库链接类型
            <code>
            SQLOperation s = new SQLOperation("Data Source=serverPath ;Initial Catalog=catalog;Persist Security Info=True;User ID=userName;Password=password", 1);
            </code></example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.Read(System.String)">
            <summary>
            return datatable base SQL string, will be null if error
            直接执行SQL 查询语句，返回datatable对象。
            </summary>
            <param name="sql">SQL string</param>
            <returns>
            return null if error.
            </returns>
            <example>
              <code>
            SQLOperation s = new SQLOperation("SqlServerDB");
            DataTable dt = s.read("select * from DemoTable");
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.ReadDataSet(System.String)">
            <summary>
            return datatable base SQL string, will be null if error
            直接执行SQL 查询语句，返回datatable对象。
            </summary>
            <param name="sql">SQL string</param>
            <returns>
            return null if error.
            </returns>
            <example>
              <code>
            SQLOperation s = new SQLOperation("SqlServerDB");
            DataTable dt = s.read("select * from DemoTable");
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.ReadRows(System.String)">
            <summary>
            return datatable base SQL string, will be null if not data or error
            直接执行SQL 查询语句，返回datatable对象。
            </summary>
            <param name="sql">SQL string</param>
            <returns>
            return null if not data or error, call "Read" if need return datatable even not data
            </returns>
            <example>
              <code>
            SQLOperation s = new SQLOperation("SqlServerDB");
            DataTable dt = s.ReadRows("select * from DemoTable");
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.ReadColumn(System.String)">
            <summary>
            return datatable base SQL string, will be null if error, == Read()
            </summary>
            <param name="sql">The SQL.</param>
            <returns>
            datatable, null in error
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.Exec(System.String)">
            <summary>
            excution SQL string and return first value in select out reust(if have), or impact rows num
            </summary>
            <param name="sql">SQL string</param>
            <returns>
            first value in select out reust(insert), or impact rows num(update / delete)
            </returns>
            <example>
              <code>
            SQLOperation s = new SQLOperation("SqlServerDB");
            string Result = s.Exec("delete from DemoTable where value = 1");
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.DatasetUpdate(System.Data.DataSet,System.String)">
            <summary>
            this function is for whole dataset update to DB pls care the value change between operation.
            把读取出来的Dataset对象修改后，更新回目标数据库
            </summary>
            <param name="ds">the dataset u want to update with</param>
            <param name="sql">sql string。 原读取dataset对象的sql语句</param>
            <returns>
            result
            </returns>
            <example>
              <code>
            SQLOperation s = new SQLOperation("SqlServerDB");
            string sqlstring = "select * from DemoTable";
            DataTable dt = s.ReadRows();
            dt.Rows[0][1] = "new value";
            DataSet ds = new DataSet();
            ds.Tables.Add(dt);
            s.DatasetUpdate(ds, sqlstring);
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.ExecuteStoredProcedure(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            call StoredProcedure。
            调用存储过程，支持sql server和 OleDb
            </summary>
            <param name="strStoredProcedureName">Name of the string stored procedure.</param>
            <param name="myParameters">My parameters.没有参数时候需要填写空数组以便识别链接类型</param>
            <example>
              <code>
            SQLOperation s = new SQLOperation("SqlServerDB");
            s.ExecuteStoredProcedure("SP1",SqlParameter[] {});
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.ExecuteStoredProcedure(System.String,System.Data.SqlClient.SqlParameter)">
            <summary>
            call StoredProcedure。
            调用存储过程，支持sql server和 OleDb
            </summary>
            <param name="strStoredProcedureName">Name of the string stored procedure.</param>
            <param name="myParameters">My parameters.没有参数时候需要填写空对象以便识别链接类型</param>
            <example>
              <code>
            SQLOperation s = new SQLOperation("SqlServerDB");
            s.ExecuteStoredProcedure("SP1",SqlParameter[] {});
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.ExecuteStoredProcedure(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            call StoredProcedure。
            调用存储过程，支持sql server和 OleDb.
            </summary>
            <param name="strStoredProcedureName">Name of the string stored procedure.</param>
            <param name="myParameters">My parameters.没有参数时候需要填写空数组以便识别链接类型</param>
            <example>
              <code>
            SQLOperation s = new SQLOperation("OleDbParameterDB");
            s.ExecuteStoredProcedure("SP1",OleDbParameter[] {});
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.OpenSqlConn">
            <summary>
            Opens the SQL connection.
            </summary>
            <returns></returns>
            <example>
              <code>
            SQLOperation s = new SQLOperation("DB");
            s.OpenSqlConn();
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.OpenOleConn">
            <summary>
            Opens the OLE connection.
            </summary>
            <returns></returns>
            <example>
              <code>
            SQLOperation s = new SQLOperation("DB");
            s.OleDbConnection();
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.OpenOraConn">
            <summary>
            Opens the ora connection.
            </summary>
            <returns></returns>
            <example>
              <code>
            SQLOperation s = new SQLOperation("DB");
            s.OpenOraConn();
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.OpenOdbConn">
            <summary>
            Opens the odb connection.
            </summary>
            <returns></returns>
            <example>
              <code>
            SQLOperation s = new SQLOperation("DB");
            s.OpenOdbConn();
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.EndConn(System.Object)">
            <summary>
            Ends the connection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.EndConn(System.Data.SqlClient.SqlCommand)">
            <summary>
            Ends the connection.
            </summary>
            <param name="sqlCommand">The connection object.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.EndConn(System.Data.OracleClient.OracleCommand)">
            <summary>
            Ends the connection.
            </summary>
            <param name="oracleCommand">The oracle command.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.EndConn(System.Data.Odbc.OdbcCommand)">
            <summary>
            Ends the connection.
            </summary>
            <param name="odbcCommand">The ODBC command.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MySqlRead(System.String)">
            <summary>
            The MySqlRead method
            </summary>
            <param name="sql">The sql parameter</param>
            <returns>
            The System.Data.DataTable type object
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MySqlReadDataset(System.String)">
            <summary>
            The MySqlRead method
            </summary>
            <param name="sql">The sql parameter</param>
            <returns>
            The System.Data.DataTable type object
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MySqlExec(System.String)">
            <summary>
            Mies the SQL execute.
            </summary>
            <param name="sql">The SQL.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MySqlDatasetUpdate(System.Data.DataSet,System.String)">
            <summary>
            Mies the SQL dataset update.
            </summary>
            <param name="ds">The ds.</param>
            <param name="sql">The SQL.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MyOleRead(System.String)">
            <summary>
            Mies the OLE read.
            </summary>
            <param name="Sql">The SQL.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MyOleReadDataset(System.String)">
            <summary>
            Mies the OLE read.
            </summary>
            <param name="Sql">The SQL.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MyOleExec(System.String)">
            <summary>
            Mies the OLE execute.
            </summary>
            <param name="Sql">The SQL.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MyOleDatasetUpdate(System.Data.DataSet,System.String)">
            <summary>
            Mies the OLE dataset update.
            </summary>
            <param name="ds">The ds.</param>
            <param name="Sql">The SQL.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MyOraRead(System.String)">
            <summary>
            Mies the ora read.
            </summary>
            <param name="Sql">The SQL.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MyOraReadDataset(System.String)">
            <summary>
            Mies the ora read.
            </summary>
            <param name="Sql">The SQL.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MyOraExec(System.String)">
            <summary>
            Mies the ora execute.
            </summary>
            <param name="Sql">The SQL.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MyOraDatasetUpdate(System.Data.DataSet,System.String)">
            <summary>
            Mies the ora dataset update.
            </summary>
            <param name="ds">The ds.</param>
            <param name="Sql">The SQL.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MyOdbRead(System.String)">
            <summary>
            Mies the odb read.
            </summary>
            <param name="Sql">The SQL.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MyOdbReadDataSet(System.String)">
            <summary>
            Mies the odb read.
            </summary>
            <param name="Sql">The SQL.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MyOdbExec(System.String)">
            <summary>
            Mies the odb execute.
            </summary>
            <param name="Sql">The SQL.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.MyOdbDatasetUpdate(System.Data.DataSet,System.String)">
            <summary>
            Mies the odb dataset update.
            </summary>
            <param name="ds">The ds.</param>
            <param name="Sql">The SQL.</param>
            <returns>
              <c>null</c> Default documentation
            </returns>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.ConnectionStrings">
            <summary>
            Gets or sets ConnectionStrings
            assign the connectionStrings value
            单独赋值连接字符串，也可以在类初始化时赋值
            Input: whole connectionStrings
            </summary>
            <value>
            The connection strings.
            </value>
            <example>
              <code>
            ConnectionStrings = "Data Source=serverPath ;Initial Catalog=catalog;Persist Security Info=True;User ID=userName;Password=password";
            </code>
            </example>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.ConnectionType">
            <summary>
            Gets or sets Connection type
            单独赋值数据库连接类型，也可以在类初始化时赋值
            </summary>
            <value>
            The type of the connection.
            </value>
            <example>
              <code>
            ConnectionType = EDMySQLOperationType.SQLSERVER;
            </code>
            </example>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.EDMySQLOperationType">
            <summary>
            for conectiong type
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.EDMySQLOperationType.NODDEFINE">
            <summary>
            The noddefine
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.EDMySQLOperationType.SQLSERVER">
            <summary>
            The sqlserver
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.EDMySQLOperationType.OLEDB">
            <summary>
            The oledb
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.EDMySQLOperationType.ORALCE">
            <summary>
            The oralce
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.EDMySQLOperationType.ODBC">
            <summary>
            The ODBC
            </summary>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.BarCodeToHTML">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.BarCodeToHTML.get39(System.String,System.Int32,System.Int32)">
            <summary>
            Get39s the specified s.
            </summary>
            <param name="s">The s.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.BarCodeToHTML.getEAN13(System.String,System.Int32,System.Int32)">
            <summary>
            Gets the ea N13.
            </summary>
            <param name="s">The s.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.BarCodeToHTML.ean13(System.Char,System.Char)">
            <summary>
            Ean13s the specified c.
            </summary>
            <param name="c">The c.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.BarCodeToHTML.ean13type(System.Char)">
            <summary>
            Ean13types the specified c.
            </summary>
            <param name="c">The c.</param>
            <returns></returns>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper">
            
            <summary>
            类帮助器,可以动态对类,类成员进行控制(添加,删除),目前只支持属性控制。
            注意,属性以外的其它成员会被清空,功能还有待完善,使其不影响其它成员。
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.#ctor">
            
            <summary>
            防止实例化。
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CreateInstance(System.Type)">
            
            <summary>
            根据类的类型型创建类实例。
            </summary>
            <param name="t">将要创建的类型。</param>
            <returns>返回创建的类实例。</returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CreateInstance(System.String,System.Collections.Generic.List{SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CustPropertyInfo})">
            
            <summary>
            根据类的名称,属性列表创建型实例。
            </summary>
            <param name="className">将要创建的类的名称。</param>
            <param name="lcpi">将要创建的类的属性列表。</param>
            <returns>返回创建的类实例</returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CreateInstance(System.Collections.Generic.List{SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CustPropertyInfo})">
            
            <summary>
            根据属性列表创建类的实例,默认类名为DefaultClass,由于生成的类不是强类型,所以类名可以忽略。
            </summary>
            <param name="lcpi">将要创建的类的属性列表</param>
            <returns>返回创建的类的实例。</returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.SetPropertyValue(System.Object,System.String,System.Object)">
            
            <summary>
            根据类的实例设置类的属性。
            </summary>
            <param name="classInstance">将要设置的类的实例。</param>
            <param name="propertyName">将要设置属性名。</param>
            <param name="propertSetValue">将要设置属性值。</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.GetPropertyValue(System.Object,System.String)">
            
            <summary>
            根据类的实例获取类的属性。
            </summary>
            <param name="classInstance">将要获取的类的实例</param>
            <param name="propertyName">将要设置的属性名。</param>
            <returns>返回获取的类的属性。</returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.BuildType">
            
            <summary>
            创建一个没有成员的类型的实例,类名为"DefaultClass"。
            </summary>
            <returns>返回创建的类型的实例。</returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.BuildType(System.String)">
            
            <summary>
            根据类名创建一个没有成员的类型的实例。
            </summary>
            <param name="className">将要创建的类型的实例的类名。</param>
            <returns>返回创建的类型的实例。</returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.AddProperty(System.Type,System.Collections.Generic.List{SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CustPropertyInfo})">
            
            <summary>
            添加属性到类型的实例,注意:该操作会将其它成员清除掉,其功能有待完善。
            </summary>
            <param name="classType">指定类型的实例。</param>
            <param name="lcpi">表示属性的一个列表。</param>
            <returns>返回处理过的类型的实例。</returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.AddProperty(System.Type,SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CustPropertyInfo)">
            
            <summary>
            添加属性到类型的实例,注意:该操作会将其它成员清除掉,其功能有待完善。
            </summary>
            <param name="classType">指定类型的实例。</param>
            <param name="cpi">表示一个属性。</param>
            <returns>返回处理过的类型的实例。</returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.DeleteProperty(System.Type,System.String)">
            
            <summary>
            从类型的实例中移除属性,注意:该操作会将其它成员清除掉,其功能有待完善。
            </summary>
            <param name="classType">指定类型的实例。</param>
            <param name="propertyName">要移除的属性。</param>
            <returns>返回处理过的类型的实例。</returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.DeleteProperty(System.Type,System.Collections.Generic.List{System.String})">
            
            <summary>
            从类型的实例中移除属性,注意:该操作会将其它成员清除掉,其功能有待完善。
            </summary>
            <param name="classType">指定类型的实例。</param>
            <param name="ls">要移除的属性列表。</param>
            <returns>返回处理过的类型的实例。</returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.MergeProperty(System.Type,System.Collections.Generic.List{SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CustPropertyInfo})">
            
            <summary>
            把类型的实例t和lcpi参数里的属性进行合并。
            </summary>
            <param name="t">实例t</param>
            <param name="lcpi">里面包含属性列表的信息。</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.SeparateProperty(System.Type,System.Collections.Generic.List{System.String})">
            
            <summary>
            从类型的实例t的属性移除属性列表lcpi,返回的新属性列表在lcpi中。
            </summary>
            <param name="t">类型的实例t。</param>
            <param name="ls">要移除的属性列表。</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.AddPropertyToTypeBuilder(System.Reflection.Emit.TypeBuilder,System.Collections.Generic.List{SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CustPropertyInfo})">
            
            <summary>
            把lcpi参数里的属性加入到myTypeBuilder中。注意:该操作会将其它成员清除掉,其功能有待完善。
            </summary>
            <param name="myTypeBuilder">类型构造器的实例。</param>
            <param name="lcpi">里面包含属性列表的信息。</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.AddPropertyToType(System.Type,System.Collections.Generic.List{SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CustPropertyInfo})">
            
            <summary>
            把属性加入到类型的实例。
            </summary>
            <param name="classType">类型的实例。</param>
            <param name="lcpi">要加入的属性列表。</param>
            <returns>返回处理过的类型的实例。</returns>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CustPropertyInfo">
            
            <summary>
            自定义的属性信息类型。
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CustPropertyInfo.#ctor">
            
            <summary>
            空构造。
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CustPropertyInfo.#ctor(System.String,System.String)">
            
            <summary>
            根据属性类型名称,属性名称构造实例。
            </summary>
            <param name="type">属性类型名称。</param>
            <param name="propertyName">属性名称。</param>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CustPropertyInfo.Type">
            
            <summary>
            获取或设置属性类型名称。
            </summary>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CustPropertyInfo.PropertyName">
            
            <summary>
            获取或设置属性名称。
            </summary>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CustPropertyInfo.FieldName">
            
            <summary>
            获取属性字段名称。
            </summary>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CustPropertyInfo.SetPropertyMethodName">
            
            <summary>
            获取属性在IL中的Set方法名。
            </summary>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.ClassHelper.CustPropertyInfo.GetPropertyMethodName">
            
            <summary>
             获取属性在IL中的Get方法名。
            </summary>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertHelper">
            <summary>
            处理数据类型转换，数制转换、编码转换相关的类
            </summary>    
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertHelper.RepairZero(System.String,System.Int32)">
            <summary>
            指定字符串的固定长度，如果字符串小于固定长度，
            则在字符串的前面补足零，可设置的固定长度最大为9位
            </summary>
            <param name="text">原始字符串</param>
            <param name="limitedLength">字符串的固定长度</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertHelper.ConvertBase(System.String,System.Int32,System.Int32)">
            <summary>
            实现各进制数间的转换。ConvertBase("15",10,16)表示将十进制数15转换为16进制的数。
            </summary>
            <param name="value">要转换的值,即原值</param>
            <param name="from">原值的进制,只能是2,8,10,16四个值。</param>
            <param name="to">要转换到的目标进制，只能是2,8,10,16四个值。</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertHelper.StringToBytes(System.String,System.Text.Encoding)">
            <summary>
            使用指定字符集将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertHelper.BytesToString(System.Byte[],System.Text.Encoding)">
            <summary>
            使用指定字符集将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertHelper.BytesToInt32(System.Byte[])">
            <summary>
            将byte[]转换成int
            </summary>
            <param name="data">需要转换成整数的byte数组</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertHelper.StreamToBytes(System.IO.Stream)">
            <summary>
            Streams to bytes.
            </summary>
            <param name="stream">The stream.</param>
            <returns>
              <c>null</c> Default documentation
            </returns>
            <autogeneratedoc />
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertHelper.BytesToStream(System.Byte[])">
            <summary>
            Byteses to stream.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>
              <c>null</c> Default documentation
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertHelper.CleanEndEmptyBytes(System.Byte[])">
            <summary>
            Cleans the end empty bytes.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns></returns>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertJson">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertJson.String2Json(System.String)">
            <summary>
            过滤特殊字符
            </summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertJson.StringFormat(System.String,System.Type)">
            <summary>
            格式化字符型、日期型、布尔型
            </summary>
            <param name="str">The string.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertJson.ListToJson``1(System.Collections.Generic.IList{``0})">
            <summary>
            List转换成Json
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertJson.ListToJson``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            List转换成Json
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The list.</param>
            <param name="jsonName">Name of the json.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertJson.ToJson(System.Object)">
            <summary>
            对象转换为Json
            </summary>
            <param name="jsonObject">对象</param>
            <returns>
            Json字符串
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertJson.ToJson(System.Collections.IEnumerable)">
            <summary>
            对象集合转换Json
            </summary>
            <param name="array">集合对象</param>
            <returns>
            Json字符串
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertJson.ToArrayString(System.Collections.IEnumerable)">
            <summary>
            普通集合转换Json
            </summary>
            <param name="array">集合对象</param>
            <returns>
            Json字符串
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertJson.ToJson(System.Data.DataSet)">
            <summary>
            DataSet转换为Json
            </summary>
            <param name="dataSet">DataSet对象</param>
            <returns>
            Json字符串
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertJson.ToJson(System.Data.DataTable)">
            <summary>
            Datatable转换为Json
            </summary>
            <param name="dt">The dt.</param>
            <returns>
            Json字符串
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertJson.ToJson(System.Data.DataTable,System.String)">
            <summary>
            DataTable转换为Json
            </summary>
            <param name="dt">The dt.</param>
            <param name="jsonName">Name of the json.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertJson.ToJson(System.Data.Common.DbDataReader)">
            <summary>
            DataReader转换为Json
            </summary>
            <param name="dataReader">DataReader对象</param>
            <returns>
            Json字符串
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertJson.JSONToObject``1(System.String)">
            <summary>
            Jsons to object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="jsonString">The json string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConvertJson.ObjectToJSON(System.Object)">
            <summary>
            Objects to json.
            </summary>
            <param name="jsonObject">The json object.</param>
            <returns></returns>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.DESEncrypt">
            <summary>
            DES加密/解密类。
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.DESEncrypt.key">
            <summary>
            The key
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.DESEncrypt.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.DESEncrypt"/> class.
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.DESEncrypt.Encrypt(System.String)">
            <summary>
            加密
            </summary>
            <param name="Text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.DESEncrypt.Encrypt(System.String,System.String)">
            <summary>
            加密数据
            </summary>
            <param name="Text">The text.</param>
            <param name="sKey">The s key.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.DESEncrypt.Decrypt(System.String)">
            <summary>
            解密
            </summary>
            <param name="Text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.DESEncrypt.Decrypt(System.String,System.String)">
            <summary>
            解密数据
            </summary>
            <param name="Text">The text.</param>
            <param name="sKey">The s key.</param>
            <returns></returns>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.EventlogHelper">
            <summary>
            
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.EventlogHelper.sEventSource">
            <summary>
            The s event source
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.EventlogHelper.LogFileDirectory">
            <summary>
            The log file directory,default to "c:\\temp"
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.EventlogHelper.LogFileName">
            <summary>
            The log file name, default to "log_yyyyMMdd.log"
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.EventlogHelper.ShowProcessInfo">
            <summary>
            if show process information, default to true;
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.EventlogHelper.WriteMsg(System.String)">
            <summary>
            Writes the message to system event log, may be administrator access required.
            </summary>
            <param name="sText">The s text.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.EventlogHelper.WriteErr(System.String)">
            <summary>
            Writes the message to system event log, may be administrator access required.
            </summary>
            <param name="sText">The s text.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.EventlogHelper.WriteMsg(System.String,System.String)">
            <summary>
            Writes the message to system event log, may be administrator access required.
            </summary>
            <param name="sText">The s text.</param>
            <param name="sEventSourceNew">The s event source new.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.EventlogHelper.WriteMsg(System.String,System.String,System.Int32)">
            <summary>
            Writes the message to system event log, may be administrator access required.
            </summary>
            <param name="sText">The s text.</param>
            <param name="sEventSourceNew">The s event source new.</param>
            <param name="evenID">4 int</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.EventlogHelper.WriteMsg(System.String,System.String,System.Int32,System.Int16)">
            <summary>
            Writes the message to system event log, may be administrator access required.
            </summary>
            <param name="sText">The s text.</param>
            <param name="sEventSourceNew">The s event source new.</param>
            <param name="evenID">The even identifier.</param>
            <param name="eventCategory">The event category.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.EventlogHelper.AddLog(System.String)">
            <summary>
            添加文件日志, 参考静态变量LogFileDirectory、LogFileName和ShowProcessInfo
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.EventlogHelper.AddLog(System.String,System.String)">
            <summary>
            添加文件日志, 参考静态变量LogFileDirectory、LogFileName和ShowProcessInfo
            </summary>
            <param name="LogFileDirectory2">The log file directory</param>
            <param name="message">The message.</param>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.EventCategory">
            <summary>
            
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.EventCategory.ERR_SYS">
            <summary>
            The er r_ system
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.EventCategory.ERR_APP">
            <summary>
            The er r_ application
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.EventCategory.MSG">
            <summary>
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.EventCategory.EventID">
            <summary>
            The event identifier
            </summary>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.ExcelHelper">
            <summary>
            Excel操作类
            </summary>
            Microsoft Excel 11.0 Object Library
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ExcelHelper.DataTable1Excel(System.Data.DataTable)">
            <summary>
            Datas the table1 excel.
            </summary>
            <param name="dtData">The dt data.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ExcelHelper.DataTable2Excel(System.Data.DataTable)">
            <summary>
            导出Excel文件，转换为可读模式
            </summary>
            <param name="dtData">The dt data.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ExcelHelper.DataTable3Excel(System.Data.DataTable,System.String)">
            <summary>
            导出Excel文件，并自定义文件名
            </summary>
            <param name="dtData">The dt data.</param>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ExcelHelper.OutputToExcel(System.Data.DataTable,System.String)">
            <summary>
            将数据导出至Excel文件
            </summary>
            <param name="Table">DataTable对象</param>
            <param name="ExcelFilePath">Excel文件路径</param>
            <returns></returns>
            <exception cref="T:System.Exception">该文件已经存在！</exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ExcelHelper.OutputToExcel(System.Data.DataTable,System.Collections.ArrayList,System.String)">
            <summary>
            将数据导出至Excel文件
            </summary>
            <param name="Table">DataTable对象</param>
            <param name="Columns">要导出的数据列集合</param>
            <param name="ExcelFilePath">Excel文件路径</param>
            <returns></returns>
            <exception cref="T:System.Exception">该文件已经存在！</exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ExcelHelper.GetExcelTables(System.String)">
            <summary>
            获取Excel文件数据表列表
            </summary>
            <param name="ExcelFileName">Name of the excel file.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ExcelHelper.InputFromExcel(System.String,System.String)">
            <summary>
            将Excel文件导出至DataTable(第一行作为表头)
            </summary>
            <param name="ExcelFilePath">Excel文件路径</param>
            <param name="TableName">数据表名，如果数据表名错误，默认为第一个数据表名</param>
            <returns></returns>
            <exception cref="T:System.Exception">Excel文件不存在！</exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ExcelHelper.GetExcelTableColumns(System.String,System.String)">
            <summary>
            获取Excel文件指定数据表的数据列表
            </summary>
            <param name="ExcelFileName">Excel文件名</param>
            <param name="TableName">数据表名</param>
            <returns></returns>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.JsHelper">
            <summary>
            客户端脚本输出
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.JsHelper.AlertAndRedirect(System.String,System.String)">
            <summary>
            弹出信息,并跳转指定页面。
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.JsHelper.AlertAndGoHistory(System.String,System.Int32)">
            <summary>
            弹出信息,并返回历史页面
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.JsHelper.Redirect(System.String)">
            <summary>
            直接跳转到指定的页面
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.JsHelper.AlertAndParentUrl(System.String,System.String)">
            <summary>
            弹出信息 并指定到父窗口
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.JsHelper.ParentRedirect(System.String)">
            <summary>
            返回到父窗口
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.JsHelper.BackHistory(System.Int32)">
            <summary>
            返回历史页面
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.JsHelper.Alert(System.String)">
            <summary>
            弹出信息，注意直接在页面写入JS语句可能导致页面排版变形。
            要避免这种情况，使用其他重载
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.JsHelper.Alert(System.Web.UI.Page,System.String)">
            <summary>
            弹出信息,使用注册模块，可避免页面变形
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.JsHelper.RegisterScriptBlock(System.Web.UI.Page,System.String)">
            <summary>
            注册脚本块
            </summary>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper">
            <summary>
            网络操作相关的类
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.GetValidPort(System.String)">
            <summary>
            检查设置的IP地址是否正确，并返回正确的IP地址,无效IP地址返回"-1"。
            </summary>
            <param name="port">设置的端口号</param>
            <returns></returns>
            <exception cref="T:System.Exception">
            端口号不能为空！
            or
            端口号范围无效！
            </exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StringToIPAddress(System.String)">
            <summary>
            将字符串形式的IP地址转换成IPAddress对象
            </summary>
            <param name="ip">字符串形式的IP地址</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.GetClientIP(System.Net.Sockets.Socket)">
            <summary>
            获取远程客户机的IP地址
            </summary>
            <param name="clientSocket">客户端的socket对象</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.CreateTcpListener">
            <summary>
            创建一个自动分配IP和端口的TcpListener对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.CreateTcpListener(System.String,System.Int32)">
            <summary>
            创建一个TcpListener对象
            </summary>
            <param name="ip">IP地址</param>
            <param name="port">端口</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.CreateTcpListener(System.Int32,System.String)">
            <summary>
            Creates the TCP listener for any ip
            </summary>
            <param name="port">The port.</param>
            <param name="ip">The ip.</param>
            <returns>
              <c>null</c> Default documentation
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StartTcpListener(System.Net.Sockets.TcpListener,SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.TCPReciveAfterActionDelegate)">
            <summary>
            Listeners the star.
            </summary>
            <param name="lp">The lp.</param>
            <param name="ExeAction">The executable action.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.TCPConnect(System.Net.IPEndPoint)">
            <summary>
            connect TCP
            </summary>
            <param name="serverEndPoint">The server end point.</param>
            <returns>
              <c>null</c> Default documentation
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.TCPConnect(System.String,System.Int32)">
            <summary>
            connect TCP
            </summary>
            <param name="IP">The ip.</param>
            <param name="Port">The port.</param>
            <returns>
              <c>null</c> Default documentation
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.TCPSentMsg(System.Net.Sockets.TcpClient,System.String)">
            <summary>
            TCPs the sent MSG.
            </summary>
            <param name="client">The client.</param>
            <param name="Msg">The MSG.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.TCPSentMsg(System.Net.Sockets.TcpClient,System.Object,System.Type)">
            <summary>
            TCPs the sent MSG.
            </summary>
            <param name="client">The client.</param>
            <param name="Msg">The MSG object which need to be XmlSerializer, like datatable(need table name), arraylist</param>
            <param name="type">The type of XmlSerializer Msg</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.TCPReceiveMsg(System.Net.Sockets.TcpClient,System.Int32)">
            <summary>
            TCP the receive MSG.
            </summary>
            <param name="client">The client.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <returns>
              <c>null</c> Default documentation
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.TCPReceiveMsg(System.Net.Sockets.TcpClient,System.Type,System.Int32)">
            <summary>
            TCPs the receive MSG.
            </summary>
            <param name="client">The client.</param>
            <param name="type">The XmlSerializer  object type.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <returns>
              <c>null</c> Default documentation
            </returns>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.allDone">
            <summary>
            All done
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.allRevice">
            <summary>
            All revice
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.Accept(System.IAsyncResult)">
            <summary>
            Accepts the specified iar.
            </summary>
            <param name="iar">The iar.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.Asyncread(SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StateObject)">
            <summary>
            Asyncreads the specified states.
            </summary>
            <param name="States">The states.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.TCPReadCallBack(System.IAsyncResult)">
            <summary>
            TCPs the read call back.
            </summary>
            <param name="iar">The iar.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StartTcpAsycListener(System.Net.Sockets.TcpListener,SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.TCPReciveAfterActionDelegate,System.Int32)">
            <summary>
            Starts the TCP asyc listener. 启动监听并异步接收信息
            </summary>
            <param name="lp">The lp.</param>
            <param name="action">callback action.Delegate of TCPReciveAfterActionDelegate(byte[] bytes)</param>
            <param name="BufferSize">Size of the buffer.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.TCPAsycSent(System.Net.Sockets.TcpClient,System.Byte[],System.AsyncCallback)">
            <summary>
            TCPs the asyc sent.异步发送信息
            </summary>
            <param name="client">The client.</param>
            <param name="bytes">The bytes.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.CreateIPEndPoint(System.String,System.Int32)">
            <summary>
            创建一个IPEndPoint对象
            </summary>
            <param name="ip">IP地址</param>
            <param name="port">端口号</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.CreateTcpSocket">
            <summary>
            创建一个基于TCP协议的Socket对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.CreateUdpSocket">
            <summary>
            创建一个基于UDP协议的Socket对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.GetLocalPoint(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点
            </summary>
            <param name="tcpListener">TcpListener对象</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.GetLocalPoint_IP(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点的IP地址
            </summary>
            <param name="tcpListener">TcpListener对象</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.GetLocalPoint_Port(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点的端口号
            </summary>
            <param name="tcpListener">TcpListener对象</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.GetLocalPoint(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点
            </summary>
            <param name="socket">Socket对象</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.GetLocalPoint_IP(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点的IP地址
            </summary>
            <param name="socket">Socket对象</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.GetLocalPoint_Port(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点的端口号
            </summary>
            <param name="socket">Socket对象</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.BindEndPoint(System.Net.Sockets.Socket,System.Net.IPEndPoint)">
            <summary>
            绑定终结点
            </summary>
            <param name="socket">Socket对象</param>
            <param name="endPoint">要绑定的终结点</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.BindEndPoint(System.Net.Sockets.Socket,System.String,System.Int32)">
            <summary>
            绑定终结点
            </summary>
            <param name="socket">Socket对象</param>
            <param name="ip">服务器IP地址</param>
            <param name="port">服务器端口</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StartListen(System.Net.Sockets.Socket,System.Int32)">
            <summary>
            指定Socket对象执行监听，默认允许的最大挂起连接数为100
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="port">监听的端口号</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StartListen(System.Net.Sockets.Socket,System.Int32,System.Int32)">
            <summary>
            指定Socket对象执行监听
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="port">监听的端口号</param>
            <param name="maxConnection">允许的最大挂起连接数</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StartListen(System.Net.Sockets.Socket,System.String,System.Int32,System.Int32)">
            <summary>
            指定Socket对象执行监听
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="ip">监听的IP地址</param>
            <param name="port">监听的端口号</param>
            <param name="maxConnection">允许的最大挂起连接数</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.Connect(System.Net.Sockets.Socket,System.String,System.Int32)">
            <summary>
            连接到基于TCP协议的服务器,连接成功返回true，否则返回false
            </summary>
            <param name="socket">Socket对象</param>
            <param name="ip">服务器IP地址</param>
            <param name="port">服务器端口号</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.SendMsg(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            以同步方式向指定的Socket对象发送消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="msg">发送的消息</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.SendMsg(System.Net.Sockets.Socket,System.String)">
            <summary>
            使用UTF8编码格式以同步方式向指定的Socket对象发送消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="msg">发送的消息</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.ReceiveMsg(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            以同步方式接收消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="buffer">接收消息的缓冲区</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.ReceiveMsg(System.Net.Sockets.Socket)">
            <summary>
            以同步方式接收消息，并转换为UTF8编码格式的字符串,使用5000字节的默认缓冲区接收。
            </summary>
            <param name="socket">socket对象</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.Close(System.Net.Sockets.Socket)">
            <summary>
            关闭基于Tcp协议的Socket对象
            </summary>
            <param name="socket">要关闭的Socket对象</param>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.DefaultSmtpAdd">
            <summary>
            The default SMTP add
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.DefaultMailFrom">
            <summary>
            The default mail from
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.SendEmail(System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            发送电子邮件,所有SMTP配置信息均在config配置文件中system.net节设置.
            </summary>
            <param name="fromEmail">From email.</param>
            <param name="receiveEmail">接收电子邮件的地址,有逗号分隔</param>
            <param name="msgSubject">电子邮件的标题</param>
            <param name="msgBody">电子邮件的正文</param>
            <param name="IsEnableSSL">是否开启SSL</param>
            <param name="SmtpAdd">The SMTP add.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.SendEmail(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            发送电子邮件,所有SMTP配置信息均在config配置文件中system.net节设置.
            </summary>
            <param name="fromEmail">From email.</param>
            <param name="receiveEmail">接收电子邮件的地址,有逗号分隔</param>
            <param name="msgSubject">电子邮件的标题</param>
            <param name="msgBody">电子邮件的正文</param>
            <param name="IsEnableSSL">是否开启SSL</param>
            <param name="SmtpAdd">The SMTP add.</param>
            <param name="ccEmail">抄送人的电子邮件地址</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.SendEmail(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Sends the email.
            </summary>
            <param name="fromEmail">From email.</param>
            <param name="ceriUserName">Name of the ceri user.</param>
            <param name="ceriPassword">The ceri password.</param>
            <param name="receiveEmail">The receive email.</param>
            <param name="msgSubject">The MSG subject.</param>
            <param name="msgBody">The MSG body.</param>
            <param name="IsEnableSSL">if set to <c>true</c> [is enable SSL].</param>
            <param name="SmtpAdd">The SMTP add.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.SendEmail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Sends the email.
            </summary>
            <param name="fromEmail">From email.</param>
            <param name="ceriUserName">Name of the ceri user.</param>
            <param name="ceriPassword">The ceri password.</param>
            <param name="receiveEmail">The receive email.</param>
            <param name="ccEmail">抄送人的电子邮件地址</param>
            <param name="msgSubject">The MSG subject.</param>
            <param name="msgBody">The MSG body.</param>
            <param name="IsEnableSSL">if set to <c>true</c> [is enable SSL].</param>
            <param name="SmtpAdd">The SMTP add.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.SendEmail(System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Sends the email.
            </summary>
            <param name="receiveEmail">The receive email.</param>
            <param name="msgSubject">The MSG subject.</param>
            <param name="msgBody">The MSG body.</param>
            <param name="IsEnableSSL">if set to <c>true</c> [is enable SSL].</param>
            <param name="ccEmail">抄送人的电子邮件地址</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.SendCalendar(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.String,SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.CalendarAction,System.Boolean,System.String,System.String)">
            <summary>
            Sends the calendar.
            </summary>
            <param name="fromEmail">From email.</param>
            <param name="receiveEmail">The receive email.</param>
            <param name="attendMail">The attend mail.</param>
            <param name="msgSubject">The MSG subject.</param>
            <param name="msgBody">The MSG body.</param>
            <param name="SmtpAdd">The SMTP add.</param>
            <param name="location">The location.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="UID">The uid.</param>
            <param name="action">The action.</param>
            <param name="IsEnableSSL">if set to <c>true</c> [is enable SSL].</param>
            <param name="ceriUserName">Name of the ceri user.</param>
            <param name="ceriPassword">The ceri password.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.connectState(System.String,System.String,System.String,System.String)">
            <summary>
            连接远程共享文件夹
            </summary>
            <param name="path">远程路径，如\\test\c\a</param>
            <param name="domain">用来连接的账号所在域，如果不是AD账号，域为所在计算机名</param>
            <param name="username">用来连接的账号</param>
            <param name="password">用来连接的账号密码</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.EnumComputers(System.String,System.String)">
            <summary>
            使用ping命令扫描指定网段计算机
            </summary>
            <param name="IPNet">网关</param>
            <param name="subMark">子网掩码</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.EnumComputers(System.String)">
            <summary>
            Enums the computers.
            </summary>
            <param name="IPNet">The ip net.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PullWebPageStream(System.String,System.String)">
            <summary>
            使用HttpWebRequest方法从网页抓取源码，注意此方法对AJAX动态修改的源码无效
            要获取动态修改后的源码。应用WebBrowser（控制台模式下需启动独立线程处理，否则无法加载WebBrowser控件）
            </summary>
            <param name="URL">The URL.</param>
            <param name="PostString">The post string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.GetWebPageStream(System.String,System.Text.Encoding)">
            <summary>
            Gets the web page stream.
            </summary>
            <param name="url">The URL.</param>
            <param name="coding">The coding.</param>
            <returns>
              <c>null</c> Default documentation
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.DownLoadFromWebPage(System.String,System.String)">
            <summary>
            Downs the load from web page.
            </summary>
            <param name="FromUrl">From URL.</param>
            <param name="downLoadTo">Down load to.</param>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.LocalHostName">
            <summary>
            获取本机的计算机名
            </summary>
            <value>
            The name of the local host.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.LANIP">
            <summary>
            获取本机的局域网IP
            </summary>
            <value>
            The lanip.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.WANIP">
            <summary>
            获取本机在Internet网络的广域网IP
            </summary>
            <value>
            The wanip.
            </value>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.TCPReciveAfterActionDelegate">
            <summary>
            Delegate for  StartTcpAsycListener call back action
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="tcpClient">The TCP client.</param>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StateObject">
            <summary>
            
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StateObject.client">
            <summary>
            The client
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StateObject.totalBytesRead">
            <summary>
            The total bytes read
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StateObject.BufferSize">
            <summary>
            The buffer size
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StateObject.readType">
            <summary>
            The read type
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StateObject.buffer">
            <summary>
            The buffer
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StateObject.messageBuffer">
            <summary>
            The message buffer
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StateObject.pAction">
            <summary>
            The p action
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StateObject.ActionExe(SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.TCPReciveAfterActionDelegate)">
            <summary>
            Actions the executable.
            </summary>
            <param name="actionPs">The action ps.</param>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.StateObject.lp">
            <summary>
            </summary>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.CalendarAction">
            <summary>
            
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.CalendarAction.Request">
            <summary>
            The request
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.CalendarAction.Cancel">
            <summary>
            The cancel
            </summary>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail">
            <summary>
            使用加密的IMAP协议收取邮件
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail.IsDebug">
            <summary>
            The is debug
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail._mailserver">
            <summary>
            The _mailserver
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail._user">
            <summary>
            The _user
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail._port">
            <summary>
            The _port
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail._pwd">
            <summary>
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail._server">
            <summary>
            The _server
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail._netStream">
            <summary>
            The _net stream
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail._reader">
            <summary>
            The _reader
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail._CRLF">
            <summary>
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            初始化
            </summary>
            <param name="server">The server.</param>
            <param name="port">The port.</param>
            <param name="user">The user.</param>
            <param name="pwd">The password.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail.Connect">
            <summary>
            连接并选择inbox文件夹
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception">Connect Error</exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail.GetMailCount">
            <summary>
            定位到INBOX文件夹，并获取inbox文件夹邮件数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail.GetRefMailWithSubject(System.String)">
            <summary>
            根据关键词选择邮件列表，返回UID 数组
            </summary>
            <param name="keyword">The keyword.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail.GetMailUIDList">
            <summary>
            返回当前文件夹邮件UID数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail.GetMail(System.Int32,System.String)">
            <summary>
            根据ID（顺序号，1代表时间最久的一封）获取邮件内容，默认返回文件头
            返回多行内容时候会用" \r\n₴₴₴ "分隔
            </summary>
            <param name="id">The identifier.</param>
            <param name="returnParts">指定获取的内容，参考IMAP命令和相关RFC822文档，为空时默认返回文件头</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail.GetMail(System.String,System.String)">
            <summary>
            根据UID获取邮件内容，默认返回文件头
            返回多行内容时候会用" \r\n₴₴₴ "分隔
            </summary>
            <param name="id">The identifier.</param>
            <param name="returnParts">指定获取的内容，参考IMAP命令和相关RFC822文档，为空时默认返回文件头</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail.DeleteMail(System.Int32)">
            <summary>
            标记邮件为删除
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail.Copy(System.Int32,System.String)">
            <summary>
            Copies the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="newbox">The newbox.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail.Base64Decode(System.String)">
            <summary>
            邮件内容使用base64编码，通过此方法解密
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail.Close">
            <summary>
            关闭连接，执行标记的命令以移动或修改邮件
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail.ExecCommand(System.String)">
            <summary>
            执行IMAP命令
            返回多行内容时候会用" \r\n₴₴₴ "分隔
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail.ReadCommandResult">
            <summary>
            Reads the command result.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.IMAPMail.ValidateServerCertificate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Validates the server certificate.
            </summary>
            <param name="sender">The sender.</param>
            <param name="certificate">The certificate.</param>
            <param name="chain">The chain.</param>
            <param name="sslPolicyErrors">The SSL policy errors.</param>
            <returns></returns>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail">
            <summary>
            使用加密的POP3协议收取邮件
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail._pop3server">
            <summary>
            The _pop3server
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail._user">
            <summary>
            The _user
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail._port">
            <summary>
            The _port
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail._pwd">
            <summary>
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail._server">
            <summary>
            The _server
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail._netStream">
            <summary>
            The _net stream
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail._reader">
            <summary>
            The _reader
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail._data">
            <summary>
            The _data
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail._charData">
            <summary>
            The _char data
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail._CRLF">
            <summary>
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail"/> class.
            </summary>
            <param name="server">The server.</param>
            <param name="port">The port.</param>
            <param name="user">The user.</param>
            <param name="pwd">The password.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail.Connect">
            <summary>
            connect
            </summary>
            <exception cref="T:System.Exception">
            Connect Error
            or
            User Error
            or
            Pass Error
            </exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail.GetMailCount">
            <summary>
            get message Numbers
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail.GetMail(System.Int32)">
            <summary>
            Gets the mail.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail.DeleteMail(System.Int32)">
            <summary>
            Deletes the mail.
            </summary>
            <param name="id">The identifier.</param>
            <exception cref="T:System.Exception">Delete Error</exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail.Close">
            <summary>
            close connection
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail.CheckResult(System.String)">
            <summary>
            Checks the result.
            </summary>
            <param name="reply">The reply.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.NetHelper.PopMail.Log(System.String)">
            <summary>
            Logs the specified MSG.
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.PinYinHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.PinYinHelper.GetFirstLetter(System.String)">
            <summary>
            Gets the first letter.
            </summary>
            <param name="hz">The hz.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.PinYinHelper.GetCodstring(System.String)">
            <summary>
            取汉字拼音的首字母
            </summary>
            <param name="UnName">汉字</param>
            <returns>
            首字母
            </returns>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.SEWCDmartHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SEWCDmartHelper.IsOfficeHoliday(System.DateTime)">
            <summary>
            Determines whether [is office holiday] [the specified date].
            </summary>
            <param name="Date">The date.</param>
            <returns></returns>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsNum(System.String)">
            <summary>
            Determines whether the specified source string is number.
            </summary>
            <param name="sourceString">The source string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsIntNum(System.String,System.Int16@)">
            <summary>
            Determines whether [is int number] [the specified source string].
            </summary>
            <param name="sourceString">The source string.</param>
            <param name="resultString">The result string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsIntNum(System.String,System.Int32@)">
            <summary>
            Determines whether [is int number] [the specified source string].
            </summary>
            <param name="sourceString">The source string.</param>
            <param name="resultString">The result string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsIntNum(System.String,System.Int64@)">
            <summary>
            Determines whether [is int number] [the specified source string].
            </summary>
            <param name="sourceString">The source string.</param>
            <param name="resultString">The result string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsDoubleNum(System.String,System.Double@)">
            <summary>
            Determines whether [is double number] [the specified source string].
            </summary>
            <param name="sourceString">The source string.</param>
            <param name="resultString">The result string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsfloatNum(System.String,System.Single@)">
            <summary>
            Isfloats the number.
            </summary>
            <param name="sourceString">The source string.</param>
            <param name="resultString">The result string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsAllString(System.String)">
            <summary>
            Determines whether [is all string] [the specified source string].
            </summary>
            <param name="sourceString">The source string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsSqlString(System.String)">
            <summary>
            Determines whether [is SQL string] [the specified source string].
            </summary>
            <param name="sourceString">The source string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsMail(System.String)">
            <summary>
            Determines whether the specified source string is mail.
            </summary>
            <param name="sourceString">The source string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.RemoveSQlString(System.String)">
            <summary>
            Removes the s ql string.
            </summary>
            <param name="sourceString">The source string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsNumStatic(System.String)">
            <summary>
            Determines whether [is number static] [the specified source string].
            </summary>
            <param name="sourceString">The source string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsIntNumStatic(System.String,System.Int16@)">
            <summary>
            Determines whether [is int number static] [the specified source string].
            </summary>
            <param name="sourceString">The source string.</param>
            <param name="resultString">The result string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsIntNumStatic(System.String,System.Int32@)">
            <summary>
            Determines whether [is int number static] [the specified source string].
            </summary>
            <param name="sourceString">The source string.</param>
            <param name="resultString">The result string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsIntNumStatic(System.String,System.Int64@)">
            <summary>
            Determines whether [is int number static] [the specified source string].
            </summary>
            <param name="sourceString">The source string.</param>
            <param name="resultString">The result string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsDoubleNumStatic(System.String,System.Double@)">
            <summary>
            Determines whether [is double number static] [the specified source string].
            </summary>
            <param name="sourceString">The source string.</param>
            <param name="resultString">The result string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsfloatNumStatic(System.String,System.Single@)">
            <summary>
            Isfloats the number static.
            </summary>
            <param name="sourceString">The source string.</param>
            <param name="resultString">The result string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsAllStringStatic(System.String)">
            <summary>
            Determines whether [is all string static] [the specified source string].
            </summary>
            <param name="sourceString">The source string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsSqlStringStatic(System.String)">
            <summary>
            Determines whether [is SQL string static] [the specified source string].
            </summary>
            <param name="sourceString">The source string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.IsMailStatic(System.String)">
            <summary>
            Determines whether [is mail static] [the specified source string].
            </summary>
            <param name="sourceString">The source string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.ReCoverSQlStringStatic(System.String)">
            <summary>
            Res the cover s ql string static.
            </summary>
            <param name="sourceString">The source string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.RemoveSQlStringStatic(System.String)">
            <summary>
            Removes the s ql string static.
            </summary>
            <param name="sourceString">The source string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.RemoveNoNum(System.String)">
            <summary>
            Removes the no number.
            </summary>
            <param name="sourceString">The source string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.RemoveNoLetter(System.String)">
            <summary>
            Removes the no letter.
            </summary>
            <param name="sourceString">The source string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.HtmlEncode(System.String)">
            <summary>
            HTMLs the encode.
            </summary>
            <param name="sourceString">The source string.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.StringCleanHelper.HtmlDecode(System.String)">
            <summary>
            HTMLs the decode.
            </summary>
            <param name="sourceString">The source string.</param>
            <returns></returns>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo">
            <summary>
            Descript:   This class is used to indenfy the user info, also with  windows authentication;
            Required:   Net FW3.5 or abovt
            Useing in : WinForm / WebForm(windows authentication for some funtion)
            Updated:    2015.03.12 Guantujiang
            </summary>
            
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.GetWindowsUserNameOfWebClient">
            <summary>
            this funciton will reture the windows login name while access with browser.
            it maybe impact by IIS(or other webserver) and client browser apllication config.
            </summary>
            <returns>windows login name </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.GetIPOfWebClient">
            <summary>
            Gets the ip of web client.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.GetWindowsUserNameOfFormClient">
            <summary>
            this funciton will reture the windows login name while running in the windows form appliation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.GetComputerNameOfFormClient">
            <summary>
            reture the computer name while running in windows form
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.GetUserInfoPropertieFromAD(System.String,System.String)">
            <summary>
            get specified Propertie value from AD by PropertieName, AD was define by DomainName
            </summary>
            <param name="userID"></param>
            <param name="PropertieName"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.GetUserInfoPropertieFromAD(System.String,System.String,System.String)">
            <summary>
            get specified Propertie value from AD by PropertieName
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.GetUserInfoPropertieFromAD(System.String,System.String[])">
            <summary>
            get specified Propertie value from AD by PropertieName, AD was define by DomainName
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.GetUserInfoPropertieFromAD(System.String,System.String,System.String[])">
            <summary>
            get specified Propertie value from AD by PropertieName
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.GetUserInfoFromAD(System.String)">
            <summary>
            get all Propertie value from AD  , AD was define by DomainName
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.GetUserInfoFromAD(System.String,System.String)">
            <summary>
            get all Propertie value from AD   
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.IsVerifyUser(System.String,System.String)">
            <summary>
            this funtion is used to verify domain user,domain was define by DomainName
            </summary>
            <param name="domian"></param>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.IsVerifyUser(System.String,System.String,System.String)">
            <summary>
            this funtion is used to verify domain user
            </summary>
            <param name="domian"></param>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.IsDomainUserGroup(System.String)">
            <summary>
            this funtion is user to verify domian user if in the specilly group, normally the group should be under the some domain, or refer to below other polymiorphism funtion
            </summary>
            <param name="domian"></param>
            <param name="username"></param>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.IsDomainUserGroup(System.String,System.String)">
            <summary>
            this funtion is user to verify domian user if in the specilly group, normally the group should be under the some domain, or refer to below other polymiorphism funtion
            </summary>
            <param name="domian"></param>
            <param name="username"></param>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.IsDomainUserGroup(System.String,System.String,System.String)">
            <summary>
            Determines whether [is domain user group] [the specified domian].
            </summary>
            <param name="domian">The domian.</param>
            <param name="username">The username.</param>
            <param name="group">The group.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.IsDomainUserGroup(System.String,System.String,System.String,System.String)">
            <summary>
            to verify if the user belogn to the group
            the default access info is only for user's domain, if need access group doamin with user info, user other method.
            </summary>
            <param name="domian">user domain</param>
            <param name="username">user ID </param>
            <param name="groupDomain">group domain</param>
            <param name="group">group name</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.IsDomainUserGroup(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Determines whether [is domain user group] [the specified domian].
            </summary>
            <param name="domian">The domian.</param>
            <param name="username">The username.</param>
            <param name="groupDomain">The group domain.</param>
            <param name="group">The group.</param>
            <param name="grouAccessUsername">The grou access username.</param>
            <param name="grouAccessPassdword">The grou access passdword.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.IsDomainUserGroup(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Determines whether [is domain user group] [the specified domian].
            </summary>
            <param name="domian">The domian.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <param name="groupDomain">The group domain.</param>
            <param name="group">The group.</param>
            <param name="grouAccessUsername">The grou access username.</param>
            <param name="grouAccessPassdword">The grou access passdword.</param>
            <returns></returns>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.DomainName">
            <summary>
            indenfy the Domain info if u need to access AD
            </summary>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.DomainAccessUser">
            <summary>
            indenfy the Domain info if u need to access AD
            </summary>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo.DomainAccessPSW">
            <summary>
            indenfy the Domain info if u need to access AD
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.WinWMI.GetByWMI(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            get remote PC with WMI way, for WMI detail, pls refer to https://msdn.microsoft.com/en-us/library/windows/desktop/aa394582(v=vs.85).aspx
            </summary>
            <param name="PcName"></param>
            <param name="wmi">LIKE Win32_Desktop, the full class name can get in below URL https://msdn.microsoft.com/en-us/library/windows/desktop/aa394554(v=vs.85).aspx</param>
            <param name="wmi_meth">if used in stdregprov, it should be name as "path,key" </param>
            <param name="root">stdregprov, cimv2 and others, the full list can get in below URL</param>
            <param name="username">如果是本机的是通过NT（Authentication）认证，传空字符串</param>
            <param name="password">如果是本机的是通过NT（Authentication）认证，传空字符串</param>
            <returns>if the string start with "WMI", it was some error msg. if it get muti-values, it will split by "∮"</returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.WinWMI.OperationByWMI(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            not enable yet , as not allow to config remote pc with WMI now
            </summary>
            <param name="PcName"></param>
            <param name="usernmae"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.WinWMI.GetQueryObject(System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            get the WNI object, can work with cimv2/stdregprov , and others.
            </summary>
            <param name="PCname"></param>
            <param name="i">not used any more, post "0" will be OK</param>
            <param name="queryString"></param>
            <param name="root"></param>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibBasic.WinWMI.BuildConnection(System.String,System.String,System.String)">
            <summary>
            build up the connection to target, to finish the ahre floder or other access verify 
            you need this function while access a share floder with other guys' user info
            </summary>
            <param name="path"></param>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper">
            <summary>
            Extend from SQLOperation, check detial in the class SQLOperation
            NOT sys account in oracle
            </summary>
            <seealso cref="T:SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation"/>
            <seealso cref="T:System.IDisposable"/>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.SqlParametersReset">
            <summary>
            reset SQL parameters at each sql exec
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper"/> class.
            初始化一个<see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper"/> 实例
            </summary>
            <example>
              <code>SQLHelper s = new SQLHelper()</code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper"/> class.
            带连接字符串初始化<see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper"/>
            </summary>
            <param name="connectionStrings">The connection strings，
            can use the name in web.config.
            system will detect the connection Type base keyword, or you can define manually
            <para> 在声明连接字符串的同时，系统会根据连接字符串中是否以“Provider”开头（系统将忽略大小写与前置空格）并且其中包含“OLEDB”来判断其连接类型，
            若符合则为OLEDB数据连接类型，若不是OLEDB连接并且字符串以”DSN”字符串开头，则为ODBC连接，否则若包含“CATALOG”字符串则为SQL SERVER类型，
            如以上条件均不符合，则为ORACLE数据连接类型。此时无需额外声明连接类型。此实现方法为不安全声明方法，建议显示声明连接类型，
            并注意声明连接类型应该位于声明连接字符串之后，以避免被连接字符串初始化时的默认方法覆盖。</para></param>
            <example>
            1. 实例化一个类，并且声明用来连接SQL 数据库
            <code>
            SQLHelper s = new SQLHelper("Data Source=serverPath ;Initial Catalog=catalog;Persist Security Info=True;User ID=userName;Password=password");
            </code>
            2. 实例化一个类，调用web.config中链接字符串来连接SQL 数据库
            <para>
            web.config:
            </para>
            <code>
            <connectionStrings>
            <add name="SqlServerDB" connectionString="Data Source=serverPath ;Initial Catalog=catalog;Persist Security Info=True;User ID=userName;Password=password"/>
            </connectionStrings>
            </code>
            code:
            <code>
            SQLHelper s = new SQLHelper("SqlServerDB");
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.#ctor(System.String,SEWC_NetDevLib.SEWC_NetLibBasic.SQLOperation.EDMySQLOperationType)">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper"/> class.
            带连接字符串初始化<see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper"/>, 并指定其链接类型
            </summary>
            <param name="connectionStrings">The connection strings.连接字符串</param>
            <param name="connectionType">Type of the connection.链接类型，支持SQL SERVER / Oracle / OLEDB / ODBC</param>
            <example>
            实例化一个类，并且声明连接字符串，并显式指定数据库链接类型
            <code>
            SQLHelper s = new SQLHelper("Data Source=serverPath ;Initial Catalog=catalog;Persist Security Info=True;User ID=userName;Password=password", EDMySQLOperationType.SQLSERVER);
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper"/> class.
            带连接字符串初始化<see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper"/>, 并用整数指定其链接类型
            </summary>
            <param name="connectionStrings">The connectionStrings parameter</param>
            <param name="connectionType">The connectionType parameter</param>
            <example>
            实例化一个类，并且声明连接字符串，并显式指定数据库链接类型
            <code>
            SQLHelper s = new SQLHelper("Data Source=serverPath ;Initial Catalog=catalog;Persist Security Info=True;User ID=userName;Password=password", 1);
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.Dispose">
            <summary>
            执行与释放或重置非托管资源相关的应用程序定义的任务。
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.MakeConnectionStringsOLEDB4(System.String)">
            <summary>
            Makes the connection strings oled b4.
            手动执行建立一个OLEDB数据库链接
            </summary>
            <param name="dataSourceFilePath">The data source file path.</param>
            <example>
              <code>
                 SQLHelper s = new SQLHelper(); 
                 s.MakeConnectionStringsOLEDB4(@"C:\temp\PU_Productivity.mdb"); 
              </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.MakeConnectionStringsExcel2007(System.String)">
            <summary>
            手动建立EXCEL 2007格式的数据连接
            below funciton used to simplify connection strings define.
            pls notic that it only apply for general status, pls make sure debug it to avoid all error.
            </summary>
            <param name="dataSourceFilePath">The data source file path.</param>
            <example>
              <code>
                SQLHelper s = new SQLHelper();
                s.MakeConnectionStringsExcel2007(@"C:\temp\PU_Productivity.xlsx");
              </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.MakeConnectionStringsSQL(System.String,System.String,System.String,System.String)">
            <summary>
            手动建立SQL 数据连接
            below funciton used to simplify connection strings define.
            pls notic that it only apply for general status, pls make sure debug it to avoid all error.
            </summary>
            <param name="serverPath">The server path.</param>
            <param name="catalog">The catalog.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <example>
              <code>
                SQLHelper s = new SQLHelper();
                s.MakeConnectionStringsSQL("serverName","DBName","UserName","Password");
              </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.MakeConnectionStringsOracle(System.String,System.String,System.String)">
            <summary>
            手动建立基于TNS name的 oracle连接
            below funciton used to simplify connection strings define.
            pls notic that it only apply for general status, pls make sure debug it to avoid all error.
            NOT sys account
            </summary>
            <param name="TNSName">The TNSName.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <example>
              <code>
                SQLHelper s = new SQLHelper();
                s.MakeConnectionStringsOracle("TNSName","UserName","Password");
              </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.BuildSqlCommand">
            <summary>
            Builds the SQL command.
            建立SqlCommand对象，用于事务提交时候作为参数
            </summary>
            <returns>
            SqlCommand object
            </returns>
            <example>
              <code>
                SqlCommand sqlcmd = new SQLHelper("DB").BuildSqlCommand();
              </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.BuildOracleCommand">
            <summary>
            Builds the Oracle command.
            OracleCommand，用于事务提交时候作为参数
            </summary>
            <returns>
            OracleCommand object
            </returns>
            <example>
              <code>
                SqlCommand sqlcmd = new SQLHelper("DB").BuildOracleCommand();
              </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.Rollback(System.Object)">
            <summary>
            Rollbacks the specified SQL command. <see cref="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.Commit(System.Object)"/> class.
            事务回滚并关闭链接
            </summary>
            <param name="CommandObj">The command object. SqlCommand or OracleCommand. uese the "BuildOracleCommand()" / "BuildSqlCommand()" to build object</param>
            <returns>
            is succ or not
            </returns>
            <example>
              <code>
                SQLHelper s = new SQLHelper("DB");
                SqlCommand sqlcmd = s.BuildSqlCommand();
                s.Rollback(sqlcmd);
              </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.Commit(System.Object)">
            <summary>
            Commits the specified SQL command. <see cref="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.Rollback(System.Object)"/> class.
            提交事务并关闭链接
            </summary>
            <param name="CommandObj">The command object. SqlCommand or OracleCommand.uese the "BuildOracleCommand()" / "BuildSqlCommand()"</param>
            <returns>
            is succ or not
            </returns>
            <example>
              <code>
                SQLHelper s = new SQLHelper("DB");
                SqlCommand sqlcmd = s.BuildSqlCommand();
                s.Rollback(sqlcmd);
              </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.ReadForString(System.String)">
            <summary>
            以字符串形式返回SQL语句的第一行第一列的数据
            </summary>
            <param name="sql">The SQL.</param>
            <returns>
            如果没有内容，返回空值
            </returns>
            <example>
              <code>
                string FirstName =  new SQLHelper("DB").ReadForString("select Name from Worker");
              </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.Insert(System.String,System.String[],System.Object[])">
            <summary>
            使用字符串拼接方式执行sql语句插入数据，对于字符串类型的values添加N''标记
            inser to table by array, notice the target valuse in obj array, the function will add "N'" mark with string inpu
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="ColumnNames">the target column name</param>
            <param name="values">the target valuse in obj array</param>
            <returns>
            affect rows num
            </returns>
            <example>
              <code>
                string FirstName =  new SQLHelper("DB").Insert("DBTable",string[] {"ColumnNames1", "ColumnNames2"}, object[] {"value", 100 }) ;
              </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.Insert(System.String,System.String[],System.String[])">
            <summary>
            使用字符串拼接方式执行sql语句插入数据
            inser to table by array
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="ColumnNames">the target column name</param>
            <param name="values">the target column values</param>
            <returns>
            affect rows num
            </returns>
            <example>
              <code>
                string FirstName =  new SQLHelper("DB").Insert("DBTable",string[] {"ColumnNames1", "ColumnNames2"}, string[] {"value", "100" }) ;
              </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.Update(System.String,System.String[],System.String[],System.String[],System.String[])">
            <summary>
            Updates the specified table name.
            使用字符串拼接方式执行sql语句
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="ColumnNames">Name of the COLUMN</param>
            <param name="Values">The values.</param>
            <param name="conditionCom">The condition COLUMN</param>
            <param name="conditionValues">The condition values.</param>
            <returns>
            impact rows count
            </returns>
            <example>
              <code>
                string FirstName =  new SQLHelper("DB").Update("DBTable",string[] {"ColumnNames1"}, string[] {"value" },string[] { "ColumnNames2"}, string[] {"value2" }) ;
              </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.SqlCommandRead(System.String,System.String,System.String,System.Object)">
            <summary>
            SQLs the command read.
            参数形式读数据库，只支持sql server 和oracle. 参数CommandObj不为空的时候表示使用事务，最后需用"Commit()" or "Rollback()"方法提交事务
            </summary>
            <param name="tablename">The tablename.</param>
            <param name="columnNames">The COLUMN names.</param>
            <param name="columnValues">The COLUMN values.</param>
            <param name="CommandObj">The command object. SqlCommand or OracleCommand. uese the "BuildOracleCommand()" / "BuildSqlCommand()" to build object</param>
            <returns>
            DataTable object
            </returns>
            <example>
            1. 非事务提交
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommandRead("DBTable",string[] {"ColumnNames1"}, string[] {"value" });
            </code>
            2. 事务提交
            <code>
            SQLHelper s = new SQLHelper("DB");
            SqlCommand sc = s.BuildSqlCommand();
            DataTable dt = s.SqlCommandRead("DBTable",string[] {"ColumnNames1"}, string[] {"value" },sc);
            s.Commit(sc) ;
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.SqlCommandRead(System.String,System.String[],System.String[],System.Boolean,System.Boolean,System.Object)">
            <summary>
            SQLs the command read.
            参数形式读数据库，只支持sql server 和oracle. 参数CommandObj不为空的时候表示使用事务，最后需用"Commit()" or "Rollback()"方法提交事务
            </summary>
            <param name="tablename">The tablename.</param>
            <param name="columnNames">The COLUMN names.</param>
            <param name="columnValues">The COLUMN values.</param>
            <param name="AllCondition">if set to <c>true</c> [all condition]. or match anyone of it</param>
            <param name="exactMatch">if set to <c>true</c> [exact match]. or match as "Like"</param>
            <param name="CommandObj">The command object. SqlCommand or OracleCommand. uese the "BuildOracleCommand()" / "BuildSqlCommand()" to build object</param>
            <returns>
            DataTable object
            </returns>
            <exception cref="T:System.Exception">Table not found, tablename: + tablename</exception>
            <example>
            1. 非事务提交
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommandRead("DBTable",string[] {"ColumnNames1"}, string[] {"value" }, false,false);
            </code>
            2. 事务提交
            <code>
            SQLHelper s = new SQLHelper("DB");
            SqlCommand sc = s.BuildSqlCommand();
            DataTable dt = s.SqlCommandRead("DBTable",string[] {"ColumnNames1"}, string[] {"value" },true, false,sc);
            s.Rollback(sc) ;
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.SqlCommandRead(System.String,System.Object)">
            <summary>
            SQLs the command read.
            参数形式读数据库，只支持sql server 和oracle. 参数CommandObj不为空的时候表示使用事务，最后需用"Commit()" or "Rollback()"方法提交事务
            </summary>
            <param name="Sql">The SQL.</param>
            <param name="CommandObj">The command object. SqlCommand or OracleCommand. uese the "BuildOracleCommand()" / "BuildSqlCommand()" to build object</param>
            <returns>
            DataTable object
            </returns>
            <example>
            1. 非事务提交
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommandRead("select * from DBtable");
            </code>
            2. 事务提交
            <code>
            SQLHelper s = new SQLHelper("DB");
            SqlCommand sc = s.BuildSqlCommand();
            DataTable dt = s.SqlCommandRead("select * from DBtable",sc);
            s.Rollback(sc) ;
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.SqlCommandReadDataSet(System.String,System.String,System.String,System.Object)">
            <summary>
            SQLs the command read.
            参数形式读数据库，只支持sql server 和oracle. 参数CommandObj不为空的时候表示使用事务，最后需用"Commit()" or "Rollback()"方法提交事务
            </summary>
            <param name="tablename">The tablename.</param>
            <param name="columnNames">The COLUMN names.</param>
            <param name="columnValues">The COLUMN values.</param>
            <param name="CommandObj">The command object. SqlCommand or OracleCommand. uese the "BuildOracleCommand()" / "BuildSqlCommand()" to build object</param>
            <returns>
            DataTable object
            </returns>
            <example>
            1. 非事务提交
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommandRead("DBTable",string[] {"ColumnNames1"}, string[] {"value" });
            </code>
            2. 事务提交
            <code>
            SQLHelper s = new SQLHelper("DB");
            SqlCommand sc = s.BuildSqlCommand();
            DataTable dt = s.SqlCommandRead("DBTable",string[] {"ColumnNames1"}, string[] {"value" },sc);
            s.Commit(sc) ;
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.SqlCommandReadDataSet(System.String,System.String[],System.String[],System.Boolean,System.Boolean,System.Object)">
            <summary>
            SQLs the command read.
            参数形式读数据库，只支持sql server 和oracle. 参数CommandObj不为空的时候表示使用事务，最后需用"Commit()" or "Rollback()"方法提交事务
            </summary>
            <param name="tablename">The tablename.</param>
            <param name="columnNames">The COLUMN names.</param>
            <param name="columnValues">The COLUMN values.</param>
            <param name="AllCondition">if set to <c>true</c> [all condition]. or match anyone of it</param>
            <param name="exactMatch">if set to <c>true</c> [exact match]. or match as "Like"</param>
            <param name="CommandObj">The command object. SqlCommand or OracleCommand. uese the "BuildOracleCommand()" / "BuildSqlCommand()" to build object</param>
            <returns>
            DataTable object
            </returns>
            <exception cref="T:System.Exception">Table not found, tablename: + tablename</exception>
            <example>
            1. 非事务提交
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommandRead("DBTable",string[] {"ColumnNames1"}, string[] {"value" }, false,false);
            </code>
            2. 事务提交
            <code>
            SQLHelper s = new SQLHelper("DB");
            SqlCommand sc = s.BuildSqlCommand();
            DataTable dt = s.SqlCommandRead("DBTable",string[] {"ColumnNames1"}, string[] {"value" },true, false,sc);
            s.Rollback(sc) ;
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.SqlCommandReadDataSet(System.String,System.Object)">
            <summary>
            SQLs the command read.
            参数形式读数据库，只支持sql server 和oracle. 参数CommandObj不为空的时候表示使用事务，最后需用"Commit()" or "Rollback()"方法提交事务
            </summary>
            <param name="Sql">The SQL.</param>
            <param name="CommandObj">The command object. SqlCommand or OracleCommand. uese the "BuildOracleCommand()" / "BuildSqlCommand()" to build object</param>
            <returns>
            DataTable object
            </returns>
            <example>
            1. 非事务提交
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommandRead("select * from DBtable");
            </code>
            2. 事务提交
            <code>
            SQLHelper s = new SQLHelper("DB");
            SqlCommand sc = s.BuildSqlCommand();
            DataTable dt = s.SqlCommandRead("select * from DBtable",sc);
            s.Rollback(sc) ;
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.SqlCommendExce(SEWC_NetDevLib.SEWC_NetLibExtend.ActionType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Object)">
            <summary>
            SQLs the command excution.
            参数形式读写数据库（插入和删除，此重载不支持更新)，只支持sql server 和oracle. 参数CommandObj不为空的时候表示使用事务，最后需用"Commit()" or "Rollback()"方法提交事务
            </summary>
            <param name="action">The action.</param>
            <param name="tablename">The tablename.</param>
            <param name="columnNames">The COLUMN names. if del action , use this as condition COLUMN</param>
            <param name="columnValues">The  COLUMN values.  if del action ,  use this as condition COLUMN value</param>
            <param name="AllCondition">if set to <c>true</c> [all condition].</param>
            <param name="exactMatch">if set to <c>true</c> [exact match].</param>
            <param name="CommandObj">The command object. SqlCommand or OracleCommand. uese the "BuildOracleCommand()" / "BuildSqlCommand()" to build object</param>
            <returns>
            impact rows count
            </returns>
            <example>
            1. 非事务提交删除
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommendExce(ActionType.Del, "DBTable","columnNames","columnValues", true, false );
            </code>
            2. 非事务提交插入
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommendExce(ActionType.Insert, "DBTable","columnNames","columnValues",true, false );
            </code>
            2. 事务提交
            <code> SQLHelper s = new SQLHelper("DB");
            SqlCommand sc = s.BuildSqlCommand();
            DataTable dt =  s.SqlCommendExce(ActionType.Del, "DBTable","columnNames","columnValues", true, false, sc );
            s.Rollback(sc);
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.SqlCommendExce(SEWC_NetDevLib.SEWC_NetLibExtend.ActionType,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Object)">
            <summary>
            SQLs the command excution.
            参数形式读写数据库，只支持sql server 和oracle. 参数CommandObj不为空的时候表示使用事务，最后需用"Commit()" or "Rollback()"方法提交事务
            </summary>
            <param name="action">The action.</param>
            <param name="tablename">The tablename.</param>
            <param name="columnNames">The COLUMN names. if del action , use this as condition COLUMN</param>
            <param name="columnValues">The  COLUMN values. if del action ,  use this as condition COLUMN value</param>
            <param name="ConditionColumnNames">The condition COLUMN names.</param>
            <param name="ConditionColumnValues">The condition COLUMN values.</param>
            <param name="AllCondition">if set to <c>true</c> [all condition].</param>
            <param name="exactMatch">if set to <c>true</c> [exact match].</param>
            <param name="CommandObj">The command object. SqlCommand or OracleCommand. uese the "BuildOracleCommand()" / "BuildSqlCommand()" to build object</param>
            <returns>
            impact rows count
            </returns>
            <example>
            1. 非事务提交删除
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommendExce(ActionType.Del, "DBTable","columnNames","columnValues", true, false );
            </code>
            2. 非事务提交插入
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommendExce(ActionType.Insert, "DBTable","columnNames","columnValues" );
            </code>
            3. 非事务提交更新
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommendExce(ActionType.Insert, "DBTable","columnNames","columnValues","ConditionColumnNames","ConditionColumnValues" );
            </code>
            4. 事务提交
            <code>
            SQLHelper s = new SQLHelper("DB");
            SqlCommand sc = s.BuildSqlCommand();
            DataTable dt =  s.SqlCommendExce(ActionType.Insert, "DBTable","columnNames","columnValues","ConditionColumnNames","ConditionColumnValues", true, false, sc );
            s.Rollback(sc); 
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.SqlCommendExce(SEWC_NetDevLib.SEWC_NetLibExtend.ActionType,System.String,System.String[],System.String[],System.Boolean,System.Boolean,System.Object)">
            <summary>
            SQLs the command excution.
            参数形式读写数据库，只支持sql server 和oracle. 参数CommandObj不为空的时候表示使用事务，最后需用"Commit()" or "Rollback()"方法提交事务
            </summary>
            <param name="action">The action.</param>
            <param name="tablename">The tablename.</param>
            <param name="columnNames">The COLUMN names. if del action , use this as condition COLUMN</param>
            <param name="columnValues">The  COLUMN values.  if del action , use this as condition COLUMN value</param>
            <param name="AllCondition">if set to <c>true</c> [all condition].</param>
            <param name="exactMatch">if set to <c>true</c> [exact match].</param>
            <param name="CommandObj">The command object. SqlCommand or OracleCommand. uese the "BuildOracleCommand()" / "BuildSqlCommand()" to build object</param>
            <returns>
            impact rows count
            </returns>
            <example>
            1. 非事务提交删除
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommendExce(ActionType.Del, "DBTable", new string [] {"columnNames","columnNames2"}, new string [] {"columnValues","columnValues2"} , true, false );
            </code>
            2. 非事务提交插入
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommendExce(ActionType.Insert, "DBTable", new string [] {"columnNames","columnNames2"}, new string [] {"columnValues","columnValues2"}, true, false  );
            </code>
            3. 非事务提交更新
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommendExce(ActionType.Insert, "DBTable"new string [] {"columnNames","columnNames2"}, new string [] {"columnValues","columnValues2"},new string [] {"ConditionColumnNames"},new string [] {"ConditionColumnValues"},true,false );
            </code>
            4. 事务提交
            <code> SQLHelper s = new SQLHelper("DB");
            SqlCommand sc = s.BuildSqlCommand();
            DataTable dt = s.SqlCommendExce(ActionType.Insert, "DBTable"new string [] {"columnNames","columnNames2"}, new string [] {"columnValues","columnValues2"},new string [] {"ConditionColumnNames"},new string [] {"ConditionColumnValues"},true,false, sc );
            s.Rollback(sc);
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.SqlCommendExce(SEWC_NetDevLib.SEWC_NetLibExtend.ActionType,System.String,System.String[],System.String[],System.String[],System.String[],System.Boolean,System.Boolean,System.Object)">
            <summary>
            SQLs the command excution.
            参数形式读写数据库，只支持sql server 和oracle. 参数CommandObj不为空的时候表示使用事务，最后需用"Commit()" or "Rollback()"方法提交事务
            </summary>
            <param name="action">The action.</param>
            <param name="tablename">The tablename.</param>
            <param name="columnNames">The COLUMN names. if del action , use this as condition COLUMN</param>
            <param name="columnValues">The  COLUMN values. use this as condition COLUMN value</param>
            <param name="ConditionColumnNames">The condition COLUMN names.</param>
            <param name="ConditionColumnValues">The condition COLUMN values.</param>
            <param name="AllCondition">if set to <c>true</c> [all condition].</param>
            <param name="exactMatch">if set to <c>true</c> [exact match].</param>
            <param name="CommandObj">The command object. SqlCommand or OracleCommand. uese the "BuildOracleCommand()" / "BuildSqlCommand()" to build object</param>
            <returns>
            impact rows count
            </returns>
            <exception cref="T:System.Exception">
            Table not found, tablename: + tablename
            or
            Condition Parameters Err. Column =  + columnNames[i] + ; input value= + input + ; msg= + ex.Message
            or
            Insert Parameters Err. Column =  + columnNames[i] + ; input value= + input + ; msg= + ex.Message
            or
            update Parameters Err. Column =  + columnNames[i] + ; input value= + input + ; msg= + ex.Message
            or
            update Condition Parameters Err. Column =  + ConditionColumnNames[i] + ; input value= + input + ; msg= + ex.Message
            or
            Del Parameters Err. Column =  + columnNames[i] + ; input value= + input + ; msg= + ex.Message
            or
            Insert Parameters Err. Column =  + columnNames[i] + ; input value= + input + ; msg= + ex.Message
            or
            Update Parameters Err. Column =  + columnNames[i] + ; input value= + input + ; msg= + ex.Message
            or
            Update Condition Parameters Err. Column =  + ConditionColumnNames[i] + ; input value= + input + ; msg= + ex.Message
            </exception>
            <example>
            1. 非事务提交删除
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommendExce(ActionType.Del, "DBTable", new string [] {"columnNames","columnNames2"}, new string [] {"columnValues","columnValues2"} , true );
            </code>
            2. 非事务提交插入
            <code>
            DataTable dt =  new SQLHelper("DB").SqlCommendExce(ActionType.Insert, "DBTable", new string [] {"columnNames","columnNames2"}, new string [] {"columnValues","columnValues2"}, true, false  );
            </code>
            3. 非事务提交更新
            <code>DataTable dt =  new SQLHelper("DB").SqlCommendExce(ActionType.Insert, "DBTable"new string [] {"columnNames","columnNames2"}, new string [] {"columnValues","columnValues2"},new string [] {"ConditionColumnNames"},new string [] {"ConditionColumnValues"} );
            </code>
            4. 事务提交
            <code> 
            SQLHelper s = new SQLHelper("DB") SqlCommand sc = s.BuildSqlCommand();
            DataTable dt = s.SqlCommendExce(ActionType.Insert, "DBTable"new string [] {"columnNames","columnNames2"}, new string [] {"columnValues","columnValues2"},new string [] {"ConditionColumnNames"},new string [] {"ConditionColumnValues"},true,false, sc );
            s.Rollback(sc) ;
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.SqlCommendExce(System.String,System.Object)">
            <summary>
            SQLs the command excution.
            参数形式读写数据库，只支持sql server 和oracle. 参数CommandObj不为空的时候表示使用事务，最后需用"Commit()" or "Rollback()"方法提交事务
            </summary>
            <param name="Sql">The SQL.</param>
            <param name="CommandObj">The command object. SqlCommand or OracleCommand. uese the "BuildOracleCommand()" / "BuildSqlCommand()" to build object</param>
            <example>
              <code>
                 SQLHelper s = new SQLHelper("DB");
                 SqlCommand sc = s.BuildSqlCommand();
                 DataTable dt =  s.SqlCommendExce("delete from DBtalbe", sc );
                 s.Rollback(sc);
              </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetColumnType(System.String[],System.Data.DataTable,System.Int32,System.Data.SqlDbType@,System.Int32@,System.String,System.Object@)">
            <summary>
            Gets the type of the SQL column.
            获取sql server数据库指定表
            </summary>
            <param name="columnNames">The columnNames.</param>
            <param name="dt">The DataTable of values</param>
            <param name="i">The i.</param>
            <param name="st">The st.</param>
            <param name="len">The length.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <exception cref="T:System.Exception">Data type not support, type= + type + , name= + columnNames[i].ToUpper()
            or
            Data column not found,  column =  + columnNames[i].ToUpper()
            or
            Data column match err,  column =  + columnNames[i].ToUpper() + , msg = + ex.Message</exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetColumnType(System.String[],System.Data.DataTable,System.Int32,System.Data.OracleClient.OracleType@,System.Int32@,System.String,System.Object@)">
            <summary>
            Gets the type of the ora column.
            </summary>
            <param name="columnNames">The columnNames.</param>
            <param name="dt">The DataTable of values</param>
            <param name="i">The i.</param>
            <param name="st">The st.</param>
            <param name="len">The length.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <exception cref="T:System.Exception">Data type not support, type= + type + , name= + columnNames[i].ToUpper()
            or
            Data column not found,  column =  + columnNames[i].ToUpper()
            or
            Data column match err,  column =  + columnNames[i].ToUpper() + , msg = + ex.Message</exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetColumnType(System.String[],System.Data.DataTable,System.Int32,System.Data.Odbc.OdbcType@,System.Int32@,System.String,System.Object@)">
            <summary>
            Gets the type of the odbc column. ！！！ no finish
            </summary>
            <param name="columnNames">The columnNames.</param>
            <param name="dt">The DataTable of values</param>
            <param name="i">The i.</param>
            <param name="st">The st.</param>
            <param name="len">The length.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <exception cref="T:System.Exception">Data type not support, type= + type + , name= + columnNames[i].ToUpper()
            or
            Data column not found,  column =  + columnNames[i].ToUpper()
            or
            Data column match err,  column =  + columnNames[i].ToUpper() + , msg = + ex.Message</exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetAllTableNameByCatalogSQL">
            <summary>
            define some SQL function that maybe need, END with SQL means only apply for SQLSERVER, ORALCE meas only for ORALCE.
            </summary>
            <returns></returns>
            <example>
            <code>
            DataTable dt =  new SQLHelper("DB").GetAllTableNameByCatalogSQL();
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetALlColumnNameByTableSQL(System.String)">
            <summary>
            define some SQL function that maybe need, END with SQL means only apply for SQLSERVER, ORALCE meas only for ORALCE.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns></returns>
            <example>
            <code>
            DataTable dt =  new SQLHelper("DB").GetALlColumnNameByTableSQL("tableName");
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetALlColumnNameByTableORALCE(System.String)">
            <summary>
            define some SQL function that maybe need, END with SQL means only apply for SQLSERVER, ORALCE meas only for ORALCE.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns></returns>
            <example>
            <code>
            DataTable dt =  new SQLHelper("DB").GetALlColumnNameByTableORALCE("tableName");
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetALlColumnNameByTable(System.String)">
            <summary>
            Gets all column name by table.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns>
              <c>null</c> Default documentation
            </returns>
            <example>
            <code>
            DataTable dt =  new SQLHelper("DB").GetALlColumnNameByTable("tableName");
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetAllColumnTypeByTable(System.String)">
            <summary>
            get the type of column in table
            </summary>
            <param name="tablename">The tablename.</param>
            <returns></returns>
            <example>
            <code>
            DataTable dt =  new SQLHelper("DB").GetAllColumnTypeByTable("tableName");
            </code>
            </example>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper._defaultFormTable">
            <summary>
            The _default form table
            </summary>
            update ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            
            if the ctrls name end with "_ID". then this ctrls will not insert into DB and trade as index key.
            not '_' in the ColumnName
            add in 2015/04/03
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormInsert(System.String,System.Object[],System.Object[])">
            <summary>
            inser to DB used the ctrls values, ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row),
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="ctrls">The  target CTRLS.</param>
            <param name="ExcludeCtrls">The exclude CTRLS which will not insert into DB, like PK value</param>
            <returns>impact rows numb</returns>
            <example>
            <code>string result = new SQLHelper("DB").FormInsert("tableName",object [] {fld_ctrl});</code>
            <code>string result = new SQLHelper("DB").FormInsert("tableName",object [] {fld_ctrl1, fld_ctrl2},object[] { TextBox_ID} );</code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormInsert(System.String,System.Object[],System.Object)">
            <summary>
            inser to DB used the ctrls values, ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row),
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="ctrls">The  target CTRLS.</param>
            <param name="ExcludeCtrls">The exclude CTRLS which will not insert into DB, like PK value</param>
            <returns>impact rows numb</returns>
            <example>
            <code>
            string result = new SQLHelper("DB").FormInsert("tableName",object [] {fld_ctrl},TextBox_ID );
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormInsert(System.Object[],System.Object[])">
            <summary>
            inser to DB used the ctrls values, ctrl need anme as ctrlsTypeInt_ColumnName or ctrlsTypeInt_ColumnName_NO with INT text after ctrl type,
            or ctrlsType_ColumnName or ctrlsType_ColumnName_NO with string format
            if the ctrls name with "_ID". then this ctrls will not insert into DB.
            not '_' in the ColumnName.
            need assign DefaultFormTable 1st
            </summary>
            <param name="ctrls">The  target CTRLS.</param>
            <param name="ExcludeCtrls">The exclude CTRLS which will not insert into DB, like PK value</param>
            <returns>impact rows numb</returns>
            <example>
            <code>
            string result = new SQLHelper("DB").FormInsert( object [] {fld_ctrl });
            </code>
            </example>
            <exception cref="T:System.Exception">_defaultFormTable not define</exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormInsert(System.Object[],System.Object)">
            <summary>
            inser to DB used the ctrls values, ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row),
            </summary>
            <param name="ctrls">The  target CTRLS.</param>
            <param name="ExcludeCtrls">The exclude CTRLS which will not insert into DB, like PK value</param>
             <returns>impact rows numb</returns>
            <example>
            <code>
            string result = new SQLHelper("DB").FormInsert( object [] {fld_ctrl }, TextBox_ID);
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormInsert(System.Windows.Forms.Control,System.Object[])">
            <summary>
            inser to DB used the ctrls values, ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row),
            </summary>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormInsert(object[] ctrls, object[] ExcludeCtrls = null)</param>
            <param name="ExcludeCtrls">The exclude CTRLS which will not insert into DB, like PK value</param>
            <returns>impact rows numb</returns>
            <example>
            <code>
            string result = new SQLHelper("DB").FormInsert( ParntCtrl, object [] {TextBox_ID } );
            </code>
            </example>
            <exception cref="T:System.Exception">_defaultFormTable not define</exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormInsert(System.Windows.Forms.Control,System.Object)">
            <summary>
            inser to DB used the ctrls values, ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row),
            </summary>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormInsert(object[] ctrls, object[] ExcludeCtrls = null)</param>
            <param name="ExcludeCtrls">The exclude CTRLS which will not insert into DB, like PK value</param>
            <returns>impact rows numb</returns>
            <example>
            <code>
            string result = new SQLHelper("DB").FormInsert( ParntCtrl, TextBox_ID);
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormInsert(System.Web.UI.Control,System.Object[])">
            <summary>
            inser to DB used the ctrls values, ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row),
            </summary>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormInsert(object[] ctrls, object[] ExcludeCtrls = null)</param>
            <param name="ExcludeCtrls">The exclude CTRLS which will not insert into DB, like PK value</param>
            <returns>impact rows numb</returns>
            <example>
            <code>
            string result = new SQLHelper("DB").FormInsert( ParntCtrl,  object[]  {TextBox_ID } );
            </code>
            </example>
            <exception cref="T:System.Exception">_defaultFormTable not define</exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormInsert(System.Web.UI.Control,System.Object)">
            <summary>
            inser to DB used the ctrls values, ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row),
            </summary>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormInsert(object[] ctrls, object[] ExcludeCtrls = null)</param>
            <param name="ExcludeCtrls">The exclude CTRLS which will not insert into DB, like PK value</param>
            <returns>impact rows numb</returns>
            <example>
            <code>
            string result = new SQLHelper("DB").FormInsert( ParntCtrl, TextBox_ID  );
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormUpdate(System.String,System.Object[],System.Object[])">
            <summary>
            update ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            add in 2015/04/03
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="ctrls">The  target CTRLS.</param>
            <param name="conditionCtrls">the indenfy ctrl / column</param>
            <returns>impact rows numb</returns>
            <example>
            <code>
            string result = new SQLHelper("DB").FormUpdate("tableName",object [] {fld_ctrl1, fld_ctrl2},object[] { TextBox_ID} );
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormUpdate(System.String,System.Object[],System.Object)">
             <summary>
             update ctrl valuese to DB, it will get the table Column name base ctrls name. 
             ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
             </summary>
             <param name="tableName">Name of the table.</param>
             <param name="ctrls">The  target CTRLS.</param>
             <param name="conditionCtrls">The condition CTRLS.</param>
            <returns>impact rows numb</returns>
             <example>
             <code>
             string result = new SQLHelper("DB").FormUpdate("tableName",object [] {fld_ctrl1},  TextBox_ID );
             </code>
             </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormUpdate(System.Object[],System.Object[])">
            <summary>
            update ctrl valuese to DB, update ctrl valuese to DB, update ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="ctrls">The  target CTRLS.</param>
            <param name="conditionCtrls">The condition CTRLS.</param>
            <returns>impact rows numb</returns>
            <example>
            <code>
            string result = new SQLHelper("DB").FormUpdate("tableName",object [] {fld_ctrl1, fld_ctrl2},object[] { TextBox_ID} );
            </code>
            </example>
            <exception cref="T:System.Exception">_defaultFormTable not define</exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormUpdate(System.Object[],System.Object)">
            <summary>
            update ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="ctrls">The  target CTRLS.</param>
            <param name="conditionCtrls">The condition CTRLS.</param>
             <returns>impact rows numb</returns>
            <example>
            <code>
            string result = new SQLHelper("DB").FormUpdate("tableName",object [] {fld_ctrl1, fld_ctrl2}, TextBox_ID );
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormUpdate(System.Windows.Forms.Control,System.Object[])">
            <summary>
            update ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormUpdate(object[] ctrls, object[] conditionCtrls) </param>
            <param name="conditionCtrls">The condition CTRLS.</param>
             <returns>impact rows numb</returns>
            <example>
            <code>
            string result = new SQLHelper("DB").FormUpdate(ParntCtrl,object[] { TextBox_ID} );
            </code>
            </example>
            <exception cref="T:System.Exception">_defaultFormTable not define</exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormUpdate(System.Windows.Forms.Control,System.Object)">
            <summary>
            update ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormUpdate(object[] ctrls, object[] conditionCtrls) </param>
            <param name="conditionCtrls">The condition CTRLS.</param>
             <returns>impact rows numb</returns>
            <example>
            <code>
            string result = new SQLHelper("DB").FormUpdate(ParntCtrl, TextBox_ID );
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormUpdate(System.Web.UI.Control,System.Object[])">
            <summary>
            update ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            
            if the ctrls name end with "_ID". then this ctrls will not insert into DB and trade as index key.
            not '_' in the ColumnName
            </summary>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormUpdate(object[] ctrls, object[] conditionCtrls) </param>
            <param name="conditionCtrls">The condition CTRLS.</param>
             <returns>impact rows numb</returns>
            <example>
            <code>
            string result = new SQLHelper("DB").FormUpdate(ParntCtrl,object[] { TextBox_ID} );
            </code>
            </example>
            <exception cref="T:System.Exception">_defaultFormTable not define</exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormUpdate(System.Web.UI.Control,System.Object)">
            <summary>
            update ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormUpdate(object[] ctrls, object[] conditionCtrls) </param>
            <param name="conditionCtrls">The condition CTRLS.</param>
             <returns>impact rows numb</returns>
            <example>
            <code>
            string result = new SQLHelper("DB").FormUpdate(ParntCtrl, TextBox_ID );
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormRead(System.String,System.Object[])">
            <summary>
            read ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="Sql">The SQL fliter string.</param>
            <param name="ctrls">The target CTRLS.</param>
            <exception cref="T:System.Exception">_defaultFormTable not define</exception>
            <example>
            <code>
            string result = new SQLHelper("DB").FormRead("select top 1 * from DbTable",object[] { TextBox_ID });
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormRead(System.String,System.Windows.Forms.Control)">
            <summary>
            read ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="Sql">The SQL fliter string</param>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormRead(object[] ctrls) </param>
            <example>
            <code>
            string result = new SQLHelper("DB").FormRead("select top 1 * from DbTable", PanelBox );
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormRead(System.String,System.Web.UI.Control)">
            <summary>
            read ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="Sql">The SQL fliter string</param>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormRead(object[] ctrls) </param>
            <example>
            <code>
            string result = new SQLHelper("DB").FormRead("select top 1 * from DbTable", PanelBox );
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormRead(System.Object[])">
            <summary>
            read ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="ctrls">The  target CTRLS.</param>
            <example>
            <code>
            string result = new SQLHelper("DB").FormRead(object[] {fld_ctrl1,fld_ctrl2 });
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormRead(System.Windows.Forms.Control)">
            <summary>
            read ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormRead(object[] ctrls) </param>
            <example>
            <code>
            string result = new SQLHelper("DB").FormRead(PanelBox});
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormRead(System.Web.UI.Control)">
            <summary>
            read ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormRead(object[] ctrls) </param>
            <example>
            <code>
            string result = new SQLHelper("DB").FormRead(PanelBox});
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormRead(System.Data.DataTable,System.Object[])">
            <summary>
            read ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="dt">The DataTable of values</param>
            <param name="ctrls">The  target CTRLS.</param>
            <example>
            <code>
            string result = new SQLHelper("DB").FormRead(DBtable, object[] {fld_ctrl1,fld_ctrl2 });
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormRead(System.Data.DataTable,System.Windows.Forms.Control)">
            <summary>
            read ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="dt">The DataTable of values</param>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormRead(object[] ctrls) </param>
            <example>
            <code>
            string result = new SQLHelper("DB").FormRead(DBtable,PanelBox);
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormRead(System.Data.DataTable,System.Web.UI.Control)">
            <summary>
            read ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="dt">The DataTable of values</param>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormRead(object[] ctrls) </param>
            <example>
            <code>
            string result = new SQLHelper("DB").FormRead(DBtable,PanelBox);
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormRead(System.Object[],System.Web.UI.Control)">
            <summary>
            read ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="ctrls">The CTRLS for condition</param>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormRead(object[] ctrls) </param>
            <exception cref="T:System.Exception">_defaultFormTable not define</exception>
            <example>
            <code>
            string result = new SQLHelper("DB").FormRead(object[] {fld_ID},PanelBox);
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormRead(System.Object[],System.Windows.Forms.Control)">
            <summary>
            read ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="ctrls">The CTRLS for condition</param>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormRead(object[] ctrls) </param>
            <exception cref="T:System.Exception">_defaultFormTable not define</exception>
            <example>
            <code>
            string result = new SQLHelper("DB").FormRead(object[] {fld_ID},PanelBox);
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormRead(System.Object[],System.Object[])">
            <summary>
            read ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="ctrls">The CTRLS for condition.</param>
            <param name="targetCtrls">The target CTRLS.</param>
            <exception cref="T:System.Exception">_defaultFormTable not define</exception>
            <example>
            <code>
            string result = new SQLHelper("DB").FormRead(object[] {fld_ID},object[] {fld_ctrl1});
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormRead(System.Object,System.Web.UI.Control)">
            <summary>
            read ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="ctrl">The CTRLS for condition.</param>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormRead(object[] ctrls) </param>
            <exception cref="T:System.Exception">_defaultFormTable not define</exception>
            <example>
            <code>
            string result = new SQLHelper("DB").FormRead(fld_ID,PanelBox);
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormRead(System.Object,System.Windows.Forms.Control)">
            <summary>
            read ctrl valuese to DB, it will get the table Column name base ctrls name. 
            ctrl need to be named as ctrlsType_ColumnName or fld_ColumnName or fld_ColumnName-i （i=0,1,2... , means row 0,1,2 in data talbe， not this value will fill ctrl with data of 1st row)
            </summary>
            <param name="ctrl">The CTRLS for condition.</param>
            <param name="ParntCtrl">The parnt control. which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormRead(object[] ctrls) </param>
            <example>
            <code>
            string result = new SQLHelper("DB").FormRead(fld_ID,PanelBox);
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormClean(System.Object[])">
            <summary>
            clean all value in form .
            清除指定控件其子控件（不含子控件内部其他层次子控件，多层次获取应该用GetAllWinFormCtrlsToTable（）先获取控件集合)的内容值，主要针对文本框 
            </summary>
            <param name="ctrls">The target CTRLS need to clean.</param>
            <example>
            <code>
            string result = new SQLHelper("DB").FormClean(object []{ TextBox_ID} );
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormClean(System.Windows.Forms.Control)">
            <summary>
            clean all value in form .
            清除指定控件其子控件（不含子控件内部其他层次子控件)的内容值，主要针对文本框
            </summary>
            <param name="ParntCtrl">The parnt control of target controls . which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormClean(object[] ctrls)</param>
             <example>
            <code>
            string result = new SQLHelper("DB").FormClean(ParntCtrl );
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.FormClean(System.Web.UI.Control)">
            <summary>
            clean all value in form .
            清除指定控件其子控件（不含子控件内部其他层次子控件，多层次获取应该用GetAllWinFormCtrlsToTable（）先获取控件集合)的内容值，主要针对文本框 
            </summary>
            <param name="ParntCtrl">The parnt control of target controls . which include your target ctrl (only sub ctrl, not iteration. in this case, call GetAllWinFormCtrlsToTable() /GetAllWebCtrlsToTable() to collect ctrl first, then use public string FormClean(object[] ctrls)</param>
            <example>
            <code>
            string result = new SQLHelper("DB").FormClean(ParntCtrl );
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetAllWinFormCtrlsToTable(System.Windows.Forms.Control,System.Int32)">
            <summary>
            this function will compare the table column name with the ctrls name, and collection the match ctrls, notice the named rule pls.
            </summary>
            <param name="parentsCtrl">The parents control.</param>
            <param name="level">The level.获取多少级子控件</param>
            <returns></returns>
            <example>
            <code>
            string result = new SQLHelper("DB").GetAllWinFormCtrlsToTable(ParntCtrl );
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetAllWebFormCtrlsToTable(System.Web.UI.Control,System.Int32)">
            <summary>
            Gets all web form CTRLS to table.
            </summary>
            <param name="parentsCtrl">The parents control.</param>
            <param name="level">The level.获取多少级子控件</param>
            <returns></returns>
             <example>
            <code>
            string result = new SQLHelper("DB").GetAllWinFormCtrlsToTable(ParntCtrl );
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetChildWinFormCtrls(System.Windows.Forms.Control,System.Int32)">
            <summary>
            Gets the child win form CTRLS.
            </summary>
            <param name="parentsCtrl">The parents control.</param>
            <param name="level">The level.获取多少级子控件</param>
            <returns></returns>
             <example>
            <code>
            string result = new SQLHelper("DB").GetAllWinFormCtrlsToTable(ParntCtrl );
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetChildWebFormCtrls(System.Web.UI.Control,System.Int32)">
            <summary>
            Gets the child web form CTRLS.
            </summary>
            <param name="parentsCtrl">The parents control.</param>
            <param name="level">The level.获取多少级子控件</param>
            <returns></returns>
             <example>
            <code>
            string result = new SQLHelper("DB").GetAllWinFormCtrlsToTable(ParntCtrl );
            </code>
            </example>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetCtrls(System.Data.DataTable,System.Windows.Forms.Control,System.Int32,System.Collections.ArrayList)">
            <summary>
            get all ctrl which match column name in datatable
            </summary>
            <param name="dt">The DataTable of values</param>
            <param name="parntsCtrl">The parnts control.</param>
            <param name="level">The level.</param>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetCtrls(System.Data.DataTable,System.Web.UI.Control,System.Int32,System.Collections.ArrayList)">
            <summary>
            get all ctrl which match column name in datatable
            </summary>
            <param name="dt">The DataTable of values</param>
            <param name="parntsCtrl">The parnts control.</param>
            <param name="level">The level.</param>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetChildCtrls(System.Windows.Forms.Control,System.Int32,System.Collections.ArrayList)">
            <summary>
            get all ctrl
            </summary>
            <param name="parntsCtrl">The parnts control.</param>
            <param name="level">The level.</param>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetChildCtrls(System.Web.UI.Control,System.Int32,System.Collections.ArrayList)">
            <summary>
            get all ctrl
            </summary>
            <param name="parntsCtrl">The parnts control.</param>
            <param name="level">The level.</param>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.GetCtrlInfo(System.Object)">
            <summary>
            all ctrl with "FLD_"
            </summary>
            <param name="ctrl">The control.</param>
            <returns>
            string[] { ctrlName, ctrlValue, ColumnName, ColumnValue }
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.SetCtrlInfo(System.Object,System.String)">
            <summary>
            Sets the control information.
            </summary>
            <param name="ctrl">The control.</param>
            <param name="ctrlValue">The control value.</param>
            <returns></returns>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.SQLHelper.DefaultFormTable">
            <summary>
            the default tgarget table name
            </summary>
            <value>
            The default form table.
            </value>
            <example>
              <code>
                  SQLHelper.DefaultFormTable = "TableName";
              </code>
            </example>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.ActionType">
            <summary>
            SqlCommendExce() 调用时指定执行操作的类型
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.ActionType.Update">
            <summary>
            The update
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.ActionType.Insert">
            <summary>
            The insert
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.ActionType.Del">
            <summary>
            The delete
            </summary>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.TJACCOUNT">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.TJACCOUNT.GetAccunt">
            <summary>
            Gets the accunt.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.TJACCOUNT.DmartInfo">
            <summary>
            Dmarts the information.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.UpLoadFiles">
            <summary>
            UpLoadFiles 的摘要说明
            </summary>
            <seealso cref="T:System.Web.UI.Page"/>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UpLoadFiles.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.UpLoadFiles"/> class.
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UpLoadFiles.UploadFile(System.String,System.Int32,System.String[],System.Web.UI.HtmlControls.HtmlInputFile)">
            <summary>
            Uploads the file.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="maxSize">The maximum size.</param>
            <param name="fileType">Type of the file.</param>
            <param name="TargetFile">The target file.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UpLoadFiles.UploadFile(System.String,System.Int32,System.String[],System.Web.UI.HtmlControls.HtmlInputFile,System.String@,System.Int32@)">
            <summary>
            上传文件
            </summary>
            <param name="filePath">保存文件地址</param>
            <param name="maxSize">文件最大大小</param>
            <param name="fileType">文件后缀类型</param>
            <param name="TargetFile">控件名</param>
            <param name="saveFileName">保存后的文件名和地址</param>
            <param name="fileSize">文件大小</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UpLoadFiles.UploadFile(System.String,System.Int32,System.String[],System.String,System.Web.UI.HtmlControls.HtmlInputFile)">
            <summary>
            Uploads the file.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="maxSize">The maximum size.</param>
            <param name="fileType">Type of the file.</param>
            <param name="filename">The filename.</param>
            <param name="TargetFile">The target file.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UpLoadFiles.GetUploadFileName">
            <summary>
            Gets the name of the upload file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UpLoadFiles.FormatNum(System.String,System.Int32)">
            <summary>
            Formats the number.
            </summary>
            <param name="Num">The number.</param>
            <param name="Bit">The bit.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UpLoadFiles.UploadFile(System.Web.UI.WebControls.FileUpload,System.String,System.String)">
            <summary>
            Uploads the file.
            </summary>
            <param name="up">Up.</param>
            <param name="savePath">The save path.</param>
            <param name="ExtMatch">The ext match.</param>
            <returns></returns>
            <exception cref="T:System.Exception">ExtMatch not match</exception>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UpLoadFiles.UploadFile(System.Web.UI.WebControls.FileUpload,System.String,System.String@,System.String@,System.String)">
            <summary>
            Uploads the file.
            </summary>
            <param name="up">Up.</param>
            <param name="savePath">The save path.</param>
            <param name="url">The URL.</param>
            <param name="FilePath">The file path.</param>
            <param name="ExtMatch">The ext match.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UpLoadFiles.UploadFile(System.Web.UI.WebControls.FileUpload,System.String,System.Int32,System.String@,System.String@,System.String)">
            <summary>
            Uploads the file.
            </summary>
            <param name="up">Up.</param>
            <param name="savePath">The save path.</param>
            <param name="MaxSize_K">The maximum size_ k.</param>
            <param name="url">The URL.</param>
            <param name="FilePath">The file path.</param>
            <param name="ExtMatch">The ext match.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UpLoadFiles.UploadFile(System.Web.UI.WebControls.FileUpload,System.String,System.String,System.Int32,System.String@,System.String@,System.String)">
            <summary>
            Uploads the file.
            </summary>
            <param name="up">Up.</param>
            <param name="savePath">The save path.</param>
            <param name="saveName">Name of the save.</param>
            <param name="MaxSize_K">The maximum size_ k.</param>
            <param name="url">The URL.</param>
            <param name="FilePath">The file path.</param>
            <param name="ExtMatch">The ext match.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UpLoadFiles.ReImage(System.String,System.Int32)">
            <summary>
            Res the image.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="width">The width.</param>
            <returns>the new file name ( without path) </returns>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper">
            <summary>
            Extend from UserInfo, check detial in the class UserInfo
            </summary>
            <seealso cref="T:SEWC_NetDevLib.SEWC_NetLibBasic.UserInfo"/>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.s">
            <summary>
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper._DBUserinfoTable">
            <summary>
            The _ database userinfo table
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper._userNameColumnName">
            <summary>
            The _ database userinfo table
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper._passwordColumnName">
            <summary>
            The _ database userinfo table
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper._userActiveSQLString">
            <summary>
            The _ database userinfo table
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper"/> class.
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper"/> class.
            </summary>
            <param name="domainName">Name of the domain.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper"/> class.
            </summary>
            <param name="domainAccessUser">The domain access user.</param>
            <param name="domainAccessPSW">The domain access PSW.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper"/> class.
            </summary>
            <param name="domainName">Name of the domain.</param>
            <param name="domainAccessUser">The domain access user.</param>
            <param name="domainAccessPSW">The domain access PSW.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.IsUserVerifyPass(System.String,System.String)">
            <summary>
            verify user / psw,
            pls define DBUserinfoTable/UserNameColumnName/PasswordColumnName/UserActiveSQLString 1st
            overwirte "SeesionPswEncod" if need
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.PswEncod(System.String)">
            <summary>
            Encoded the psw which  will be used to save in seesion
            </summary>
            <param name="UTF8Source">The ut f8 source.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.LoginOut">
            <summary>
            clean seesion to logout
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.Login(System.String,System.String)">
            <summary>
            set the user info into seesion
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.IsLoginAuthorizePass">
            <summary>
            verify the seesion is match to DB, make sure current seesion is correct but not requried user to login again
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.IsLoginStatus">
            <summary>
            verify is login in yet
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetUserInfoPropertieFromAD(System.String,System.String)">
            <summary>
            get specified Propertie value from AD by PropertieName, AD was define by DomainName
            </summary>
            <param name="userID"></param>
            <param name="PropertieName"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetUserInfoPropertieFromAD(System.String,System.String,System.String)">
            <summary>
            get specified Propertie value from AD by PropertieName
            </summary>
            <param name="userID"></param>
            <param name="ADname"></param>
            <param name="PropertieName"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetUserInfoPropertieFromAD(System.String,System.String[])">
            <summary>
            get specified Propertie value from AD by PropertieName, AD was define by DomainName
            </summary>
            <param name="userID"></param>
            <param name="PropertieNames"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetUserInfoPropertieFromAD(System.String,System.String,System.String[])">
            <summary>
            get specified Propertie value from AD by PropertieName
            </summary>
            <param name="userID"></param>
            <param name="ADname"></param>
            <param name="PropertieNames"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetUserInfoFromAD(System.String)">
            <summary>
            get all Propertie value from AD  , AD was define by DomainName
            </summary>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetUserInfoFromAD(System.String,System.String)">
            <summary>
            get all Propertie value from AD
            </summary>
            <param name="userID"></param>
            <param name="ADname"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetDomainList">
            <summary>
            Gets the domain list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetUserSamAccountNameFromGID(System.String,System.Boolean)">
            <summary>
            Gets the user sam account name from gid.
            </summary>
            <param name="userGID">The user gid.</param>
            <param name="AllDomain">if set to <c>true</c> [all domain].</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetUserSamAccountNameFromGID(System.String,System.String)">
            <summary>
            Gets the user sam account name from gid.
            </summary>
            <param name="userGID">The user gid.</param>
            <param name="domainName">Name of the domain.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetUserSamAccountNameFromGID(System.String)">
            <summary>
            Gets the user sam account name from gid.
            </summary>
            <param name="userGID">The user gid.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetUserObjFromGID(System.String)">
            <summary>
            Gets the user object from gid.
            </summary>
            <param name="userGID">The user gid.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetUserSamAccount(System.String)">
            <summary>
            Gets the user sam account.
            </summary>
            <param name="UserIDorGID">The user i dor gid.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetUserSamAccount(System.String,System.String)">
            <summary>
            Gets the user sam account.
            </summary>
            <param name="UserIDorGID">The user i dor gid.</param>
            <param name="domainName">Name of the domain.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetUserGIDFromLoginName(System.String)">
            <summary>
            Gets the name of the user gid from login.
            </summary>
            <param name="UserLoginName">Name of the user login.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetUserGIDFromLoginName(System.String,System.String)">
            <summary>
            Gets the name of the user gid from login.
            </summary>
            <param name="UserLoginName">Name of the user login.</param>
            <param name="ADname">a dname.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.GetSCDStream(System.String)">
            <summary>
            Gets the SCD stream.
            </summary>
            <param name="GID">The gid.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Not FOUND</exception>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.DBUserinfoTable">
            <summary>
            the userinfor DB table
            </summary>
            <value>
            The database userinfo table.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.UserNameColumnName">
            <summary>
            the column name of username in the data table
            </summary>
            <value>
            The name of the user name column.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.PasswordColumnName">
            <summary>
            the column name of Password in the data table
            </summary>
            <value>
            The name of the password column.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.UserActiveSQLString">
            <summary>
            the specified SQL string to  limit select sql in user table, like " disabled = 0 "
            </summary>
            <value>
            The user active SQL string.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.SeesionUserName">
            <summary>
            get or set the username in seesion
            </summary>
            <value>
            The name of the seesion user.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.SeesionPswEncoded">
            <summary>
            get or set the Encoded password in seesion
            </summary>
            <value>
            The seesion PSW encoded.
            </value>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.SCDinfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.UserInfoHelper.SCDinfo.SCD_orgCode">
            <summary>
            The sc d_org code
            </summary>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.InetOrgPerson">
            <summary>
            
            </summary>
            <seealso cref="T:System.DirectoryServices.AccountManagement.UserPrincipal"/>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.InetOrgPerson.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.InetOrgPerson"/> class.
            </summary>
            <param name="context">一个 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext"/>，用于指定对其执行操作的服务器或域。</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.InetOrgPerson.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.InetOrgPerson"/> class.
            </summary>
            <param name="context">一个 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext"/>，用于指定对其执行操作的服务器或域。</param>
            <param name="samAccountName">此用户主体的 SAM 帐户名。</param>
            <param name="password">此帐户的密码。</param>
            <param name="enabled">一个布尔值，指定是否启用帐户。</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.InetOrgPerson.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)">
            <summary>
            Finds the by identity.
            </summary>
            <param name="context">The context.</param>
            <param name="identityValue">The identity value.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.InetOrgPerson.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)">
            <summary>
            Finds the by identity.
            </summary>
            <param name="context">The context.</param>
            <param name="identityType">Type of the identity.</param>
            <param name="identityValue">The identity value.</param>
            <returns></returns>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.InetOrgPerson.mail">
            <summary>
            Gets or sets the mail.
            </summary>
            <value>
            The mail.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.InetOrgPerson.siemensgid">
            <summary>
            Gets or sets the siemensgid.
            </summary>
            <value>
            The siemensgid.
            </value>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.objectClass">
            <summary>
            Gets the object class.
            </summary>
            <value>
            The object class.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.cn">
            <summary>
            </summary>
            <value>
            The cn.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.sn">
            <summary>
            </summary>
            <value>
            The sn.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.c">
            <summary>
            </summary>
            <value>
            The c.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.l">
            <summary>
            </summary>
            <value>
            The l.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.st">
            <summary>
            </summary>
            <value>
            The st.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.description">
            <summary>
            Gets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.postalCode">
            <summary>
            Gets the postal code.
            </summary>
            <value>
            The postal code.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.physicalDeliveryOfficeName">
            <summary>
            Gets the name of the physical delivery office.
            </summary>
            <value>
            The name of the physical delivery office.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.telephoneNumber">
            <summary>
            Gets the telephone number.
            </summary>
            <value>
            The telephone number.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.userCertificate">
            <summary>
            Gets the user certificate.
            </summary>
            <value>
            The user certificate.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.givenName">
            <summary>
            Gets the name of the given.
            </summary>
            <value>
            The name of the given.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.distinguishedName">
            <summary>
            Gets the name of the distinguished.
            </summary>
            <value>
            The name of the distinguished.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.instanceType">
            <summary>
            Gets the type of the instance.
            </summary>
            <value>
            The type of the instance.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.whenCreated">
            <summary>
            Gets the when created.
            </summary>
            <value>
            The when created.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.whenChanged">
            <summary>
            Gets the when changed.
            </summary>
            <value>
            The when changed.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.displayName">
            <summary>
            Gets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.uSNCreated">
            <summary>
            Gets the u sn created.
            </summary>
            <value>
            The u sn created.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.memberOf">
            <summary>
            Gets the member of.
            </summary>
            <value>
            The member of.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.uSNChanged">
            <summary>
            Gets the u sn changed.
            </summary>
            <value>
            The u sn changed.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.co">
            <summary>
            Gets the co.
            </summary>
            <value>
            The co.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.department">
            <summary>
            Gets the department.
            </summary>
            <value>
            The department.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.company">
            <summary>
            Gets the company.
            </summary>
            <value>
            The company.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.homeMTA">
            <summary>
            Gets the home MTA.
            </summary>
            <value>
            The home MTA.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.proxyAddresses">
            <summary>
            Gets the proxy addresses.
            </summary>
            <value>
            The proxy addresses.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.homeMDB">
            <summary>
            Gets the home MDB.
            </summary>
            <value>
            The home MDB.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.streetAddress">
            <summary>
            Gets the street address.
            </summary>
            <value>
            The street address.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.mDBStorageQuota">
            <summary>
            Gets the m database storage quota.
            </summary>
            <value>
            The m database storage quota.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.mDBOverQuotaLimit">
            <summary>
            Gets the m database over quota limit.
            </summary>
            <value>
            The m database over quota limit.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.mDBUseDefaults">
            <summary>
            Gets the m database use defaults.
            </summary>
            <value>
            The m database use defaults.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.mailNickname">
            <summary>
            Gets the mail nickname.
            </summary>
            <value>
            The mail nickname.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.protocolSettings">
            <summary>
            Gets the protocol settings.
            </summary>
            <value>
            The protocol settings.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.employeeType">
            <summary>
            Gets the type of the employee.
            </summary>
            <value>
            The type of the employee.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.objectGUID">
            <summary>
            Gets the object unique identifier.
            </summary>
            <value>
            The object unique identifier.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.userAccountControl">
            <summary>
            Gets the user account control.
            </summary>
            <value>
            The user account control.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.badPwdCount">
            <summary>
            Gets the bad password count.
            </summary>
            <value>
            The bad password count.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.codePage">
            <summary>
            Gets the code page.
            </summary>
            <value>
            The code page.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.countryCode">
            <summary>
            Gets the country code.
            </summary>
            <value>
            The country code.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.homeDirectory">
            <summary>
            Gets the home directory.
            </summary>
            <value>
            The home directory.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.homeDrive">
            <summary>
            Gets the home drive.
            </summary>
            <value>
            The home drive.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.badPasswordTime">
            <summary>
            Gets the bad password time.
            </summary>
            <value>
            The bad password time.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.lastLogoff">
            <summary>
            Gets the last logoff.
            </summary>
            <value>
            The last logoff.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.lastLogon">
            <summary>
            Gets the last logon.
            </summary>
            <value>
            The last logon.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.scriptPath">
            <summary>
            Gets the script path.
            </summary>
            <value>
            The script path.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.pwdLastSet">
            <summary>
            Gets the password last set.
            </summary>
            <value>
            The password last set.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.primaryGroupID">
            <summary>
            Gets the primary group identifier.
            </summary>
            <value>
            The primary group identifier.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.objectSid">
            <summary>
            Gets the object sid.
            </summary>
            <value>
            The object sid.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.accountExpires">
            <summary>
            Gets the account expires.
            </summary>
            <value>
            The account expires.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.logonCount">
            <summary>
            Gets the logon count.
            </summary>
            <value>
            The logon count.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.sAMAccountName">
            <summary>
            Gets the name of the s am account.
            </summary>
            <value>
            The name of the s am account.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.division">
            <summary>
            Gets the division.
            </summary>
            <value>
            The division.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.sAMAccountType">
            <summary>
            Gets the type of the s am account.
            </summary>
            <value>
            The type of the s am account.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.showInAddressBook">
            <summary>
            Gets the show in address book.
            </summary>
            <value>
            The show in address book.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.managedObjects">
            <summary>
            Gets the managed objects.
            </summary>
            <value>
            The managed objects.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.legacyExchangeDN">
            <summary>
            Gets the legacy exchange dn.
            </summary>
            <value>
            The legacy exchange dn.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.userPrincipalName">
            <summary>
            Gets the name of the user principal.
            </summary>
            <value>
            The name of the user principal.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.lockoutTime">
            <summary>
            Gets the lockout time.
            </summary>
            <value>
            The lockout time.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.objectCategory">
            <summary>
            Gets the object category.
            </summary>
            <value>
            The object category.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.dSCorePropagationData">
            <summary>
            Gets the d s core propagation data.
            </summary>
            <value>
            The d s core propagation data.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msDSSiteAffinity">
            <summary>
            Gets the ms ds site affinity.
            </summary>
            <value>
            The ms ds site affinity.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.lastLogonTimestamp">
            <summary>
            Gets the last logon timestamp.
            </summary>
            <value>
            The last logon timestamp.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.textEncodedORAddress">
            <summary>
            Gets the text encoded or address.
            </summary>
            <value>
            The text encoded or address.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.mail">
            <summary>
            Gets the mail.
            </summary>
            <value>
            The mail.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msRTCSIPPrimaryUserAddress">
            <summary>
            Gets the ms rtcsip primary user address.
            </summary>
            <value>
            The ms rtcsip primary user address.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msRTCSIPUserEnabled">
            <summary>
            Gets the ms rtcsip user enabled.
            </summary>
            <value>
            The ms rtcsip user enabled.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msRTCSIPPrimaryHomeServer">
            <summary>
            Gets the ms rtcsip primary home server.
            </summary>
            <value>
            The ms rtcsip primary home server.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msExchPoliciesExcluded">
            <summary>
            Gets the ms exch policies excluded.
            </summary>
            <value>
            The ms exch policies excluded.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msExchOmaAdminWirelessEnable">
            <summary>
            Gets the ms exch oma admin wireless enable.
            </summary>
            <value>
            The ms exch oma admin wireless enable.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.siemensgid">
            <summary>
            Gets the siemensgid.
            </summary>
            <value>
            The siemensgid.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msExchHomeServerName">
            <summary>
            Gets the name of the ms exch home server.
            </summary>
            <value>
            The name of the ms exch home server.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msExchUseOAB">
            <summary>
            Gets the ms exch use oab.
            </summary>
            <value>
            The ms exch use oab.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msExchMailboxSecurityDescriptor">
            <summary>
            Gets the ms exch mailbox security descriptor.
            </summary>
            <value>
            The ms exch mailbox security descriptor.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msExchUserAccountControl">
            <summary>
            Gets the ms exch user account control.
            </summary>
            <value>
            The ms exch user account control.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.mDBOverHardQuotaLimit">
            <summary>
            Gets the m database over hard quota limit.
            </summary>
            <value>
            The m database over hard quota limit.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msExchMailboxGuid">
            <summary>
            Gets the ms exch mailbox unique identifier.
            </summary>
            <value>
            The ms exch mailbox unique identifier.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.siemensExtensionAttribute9">
            <summary>
            Gets the siemens extension attribute9.
            </summary>
            <value>
            The siemens extension attribute9.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.siemensOU">
            <summary>
            Gets the siemens ou.
            </summary>
            <value>
            The siemens ou.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msExchExtensionAttribute16">
            <summary>
            Gets the ms exch extension attribute16.
            </summary>
            <value>
            The ms exch extension attribute16.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msRTCSIPUserPolicy">
            <summary>
            Gets the ms rtcsip user policy.
            </summary>
            <value>
            The ms rtcsip user policy.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.siemensExtensionAttribute16">
            <summary>
            Gets the siemens extension attribute16.
            </summary>
            <value>
            The siemens extension attribute16.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msRTCSIPFederationEnabled">
            <summary>
            Gets the ms rtcsip federation enabled.
            </summary>
            <value>
            The ms rtcsip federation enabled.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msRTCSIPLine">
            <summary>
            Gets the ms rtcsip line.
            </summary>
            <value>
            The ms rtcsip line.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msRTCSIPInternetAccessEnabled">
            <summary>
            Gets the ms rtcsip internet access enabled.
            </summary>
            <value>
            The ms rtcsip internet access enabled.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msExchRecipientDisplayType">
            <summary>
            Gets the display type of the ms exch recipient.
            </summary>
            <value>
            The display type of the ms exch recipient.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msExchRecipientTypeDetails">
            <summary>
            Gets the ms exch recipient type details.
            </summary>
            <value>
            The ms exch recipient type details.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msRTCSIPOptionFlags">
            <summary>
            Gets the ms rtcsip option flags.
            </summary>
            <value>
            The ms rtcsip option flags.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.msExchVersion">
            <summary>
            Gets the ms exch version.
            </summary>
            <value>
            The ms exch version.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.nTSecurityDescriptor">
            <summary>
            Gets the n t security descriptor.
            </summary>
            <value>
            The n t security descriptor.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.mobile">
            <summary>
            Gets the mobile.
            </summary>
            <value>
            The mobile.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.employeeID">
            <summary>
            Gets the employee identifier.
            </summary>
            <value>
            The employee identifier.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.facsimileTelephoneNumber">
            <summary>
            Gets the facsimile telephone number.
            </summary>
            <value>
            The facsimile telephone number.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.Ewc_AD_Prop.title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert">
            <summary>
            
            </summary>
            <seealso cref="T:System.Web.UI.Page"/>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert"/> class.
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.strArrMencoder">
            <summary>
            The string arr mencoder
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.strArrFfmpeg">
            <summary>
            The string arr ffmpeg
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.ffmpegtool">
            <summary>
            The ffmpegtool
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.mencodertool">
            <summary>
            The mencodertool
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.savefile">
            <summary>
            The savefile
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.sizeOfImg">
            <summary>
            The size of img
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.widthOfFile">
            <summary>
            The width of file
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.heightOfFile">
            <summary>
            The height of file
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.GetFileName(System.String)">
            <summary>
            获取文件的名字
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.GetExtension(System.String)">
            <summary>
            获取文件扩展名
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.CheckExtension(System.String)">
            <summary>
            获取文件类型
            </summary>
            <param name="extension">The extension.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.ConvertFlv(System.String,System.String)">
            <summary>
            视频格式转为Flv
            </summary>
            <param name="vFileName">原视频文件地址</param>
            <param name="ExportName">生成后的Flv文件地址</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.CatchImg(System.String)">
            <summary>
            生成Flv视频的缩略图
            </summary>
            <param name="vFileName">视频文件地址</param>
            <returns>
            返回视频缩略图位置
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.ChangeFilePhy(System.String,System.String,System.String)">
            <summary>
            转换文件并保存在指定文件夹下
            </summary>
            <param name="fileName">上传视频文件的路径（原文件）</param>
            <param name="playFile">转换后的文件的路径（网络播放文件）</param>
            <param name="imgFile">从视频文件中抓取的图片路径</param>
            <returns>
            成功:返回图片虚拟地址;失败:返回空字符串
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.CatchImg(System.String,System.String)">
            <summary>
            Catches the img.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="imgFile">The img file.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.ChangeFileVir(System.String,System.String,System.String)">
            <summary>
            转换文件并保存在指定文件夹下
            </summary>
            <param name="fileName">上传视频文件的路径（原文件）</param>
            <param name="playFile">转换后的文件的路径（网络播放文件）</param>
            <param name="imgFile">从视频文件中抓取的图片路径</param>
            <returns>
            成功:返回图片虚拟地址;失败:返回空字符串
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.VideoConvert.MChangeFilePhy(System.String,System.String,System.String)">
            <summary>
            运行mencoder的视频解码器转换
            </summary>
            <param name="vFileName">Name of the v file.</param>
            <param name="playFile">The play file.</param>
            <param name="imgFile">The img file.</param>
            <returns></returns>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.ConfigHelper">
            <summary>
            web.config操作类
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConfigHelper.GetConfigString(System.String)">
            <summary>
            得到AppSettings中的配置字符串信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConfigHelper.GetConfigBool(System.String)">
            <summary>
            得到AppSettings中的配置Bool信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConfigHelper.GetConfigDecimal(System.String)">
            <summary>
            得到AppSettings中的配置Decimal信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.ConfigHelper.GetConfigInt(System.String)">
            <summary>
            得到AppSettings中的配置int信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.Rand">
            <summary>
            验证码类
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.Rand.Number(System.Int32)">
            <summary>
            生成随机数字
            </summary>
            <param name="length">生成长度</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.Rand.Number(System.Int32,System.Boolean)">
            <summary>
            生成随机数字
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.Rand.Str(System.Int32)">
            <summary>
            生成随机字母与数字
            </summary>
            <param name="IntStr">生成长度</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.Rand.Str(System.Int32,System.Boolean)">
            <summary>
            生成随机字母与数字
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.Rand.Str_char(System.Int32)">
            <summary>
            生成随机纯字母随机数
            </summary>
            <param name="IntStr">生成长度</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.Rand.Str_char(System.Int32,System.Boolean)">
            <summary>
            生成随机纯字母随机数
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.IdentifyingCodeHelper">
            <summary>
            验证图片类
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.IdentifyingCodeHelper.Next(System.Int32)">
            <summary>
            获得下一个随机数
            </summary>
            <param name="max">最大值</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.IdentifyingCodeHelper.Next(System.Int32,System.Int32)">
            <summary>
            获得下一个随机数
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.IdentifyingCodeHelper.CreateImage">
            <summary>
            绘制验证码
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.IdentifyingCodeHelper.GetRandomColor">
            <summary>
            字体随机颜色
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.IdentifyingCodeHelper.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
            正弦曲线Wave扭曲图片
            </summary>
            <param name="srcBmp">图片路径</param>
            <param name="bXDir">如果扭曲则选择为True</param>
            <param name="nMultValue">波形的幅度倍数，越大扭曲的程度越高,一般为3</param>
            <param name="dPhase">波形的起始相位,取值区间[0-2*PI)</param>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.IdentifyingCodeHelper.Text">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.IdentifyingCodeHelper.Image">
            <summary>
            验证码图片
            </summary>
        </member>
        <member name="T:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper">
            <summary>
            
            </summary>
            <seealso cref="T:SEWC_NetDevLib.SEWC_NetLibBasic.WinWMI"/>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper._PcName">
            <summary>
            The _ pc name
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper._username">
            <summary>
            The _ pc name
            </summary>
        </member>
        <member name="F:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper._password">
            <summary>
            The _ pc name
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.#ctor">
            <summary>
            The full class name can get in below URL https://msdn.microsoft.com/en-us/library/windows/desktop/aa394554(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.#ctor(System.String,System.String,System.String)">
            <summary>
            define the target with user info, used the define methoe without pars if target is localhost.
            </summary>
            <param name="pcName">Name of the pc.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteOSversion">
            <summary>
            get the remote PC OS version info.
            </summary>
            <returns>
            the version num
            </returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteOSversion(System.String,System.String,System.String)">
            <summary>
            Gets the remote o sversion.
            </summary>
            <param name="pcName">Name of the pc.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteOSCaption">
            <summary>
            Gets the remote os caption.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteOSCaption(System.String,System.String,System.String)">
            <summary>
            Gets the remote os caption.
            </summary>
            <param name="pcName">Name of the pc.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteOSNumberOfProcesses">
            <summary>
            Gets the remote os number of processes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteOSNumberOfProcesses(System.String,System.String,System.String)">
            <summary>
            Gets the remote os number of processes.
            </summary>
            <param name="pcName">Name of the pc.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteOSHostName">
            <summary>
            Gets the name of the remote os host.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteOSHostName(System.String,System.String,System.String)">
            <summary>
            Gets the name of the remote os host.
            </summary>
            <param name="pcName">Name of the pc.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteGroupUser">
            <summary>
            Gets the remote group user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteGroupUser(System.String,System.String,System.String)">
            <summary>
            Gets the remote group user.
            </summary>
            <param name="pcName">Name of the pc.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteHWPhysicalMemory">
            <summary>
            Gets the remote hw physical memory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteHWPhysicalMemory(System.String,System.String,System.String)">
            <summary>
            Gets the remote hw physical memory.
            </summary>
            <param name="pcName">Name of the pc.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteHWHarddisk">
            <summary>
            Gets the remote hw harddisk.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteHWHarddisk(System.String,System.String,System.String)">
            <summary>
            Gets the remote hw harddisk.
            </summary>
            <param name="pcName">Name of the pc.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteHWModel">
            <summary>
            Gets the remote hw model.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.GetRemoteHWModel(System.String,System.String,System.String)">
            <summary>
            Gets the remote hw model.
            </summary>
            <param name="pcName">Name of the pc.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.WINPClist">
            <summary>
            Winps the clist.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.PcName">
            <summary>
            define the remote PC
            </summary>
            <value>
            The name of the pc.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.UserName">
            <summary>
            define the useranem to connect to remote PC
            </summary>
            <value>
            The name of the user.
            </value>
        </member>
        <member name="P:SEWC_NetDevLib.SEWC_NetLibExtend.WinWMIhelper.Password">
            <summary>
            define the password to connect to remote PC
            </summary>
            <value>
            The password.
            </value>
        </member>
    </members>
</doc>
